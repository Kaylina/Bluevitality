补充部分：
LACP等待三倍超时时间（短超时1秒/超时30秒）	表示层进行加解密和编码
网络层的协议：ip icmp igmp  rarp ospf?
samrt linux组中的备链路激活后发送flush报文刷新上联设备arp/nd表
非对称算法的D-H算法用于解决密钥的发布问题，主要用于ipsec
Smart/Monitor仅应用于交换机的Trunk间
思科的trunk默认允许所有vlan通过/华为默认不允许所有vlan通过
RIP更新30s/失效3min/死亡4min
RSA主要用于数字签名和加密（签名：对方用私钥加密，接收方用公钥解密）
桥ID由优先级和MAC组成，替代口替代RP，备份口辅助DP，MSTP的实例有IST/MST两种类型（IST用来兼容RSTP和STP）
HMAC和数字签名都是最摘要进行加密（HMAC用MAC参与摘要的加密而数字签名使用私钥把摘要加密）
AH：报文验证头协议/ESP：封装安全载荷协议
FTP的主动模式下；客户使用N端口向其21端口请求连接服务器的21端口回应后主动用20端口发起连接（被动模式不用20和21端口）
IKE封装与UDP:500
源端口是被镜像端口，监控端口即镜像端口，流镜像是在端口上用ACL进行了过滤，纯端口镜像对所有流量进行监控
MPLS标签4字节共32bit：Lable/exp/s/ttl	（s置1表示是最后一个标签，exp用于QOS）
LDP使用端口646，发现消息udp646/会话消息tcp646，用组播224.0.0.2
MPLS中所有网络设备默认都是DU方式（下游主动分配）+自由模式（保留非下一跳）+有序方式（从下游学来后再交给上游）
BGP即是有类也是无类协议
BGP中处于同一AS内且分别连接不同AS的BGP路由器需建立邻居关系（不经IBGP而避免水平分割）
BGP中：*有效 >最优 i从IBGP获得	MED与LOCAL PREFERENCE作用相反	BGP中默认没有负载均衡
MPLS是天然隧道，隧道上的路由器可根据报文的MPLS头进行报文的转发（标签根据路由表按照转发等价类得来）
隧道在两端进行封装/解封装，隧道上的路由器根据报文外层IP头进行数据的转发
路由器决策路由的关键是路由表但转发报文的关键是FIB表，FIB类似路由表
IPv4路由/IPv6 路由各有独立的路由表且互不影响
CEF缓存：基于拓扑的转发模型，不论2/3层都将常用信息存在缓存中而不经CPU从而加快处理，预先将所有路由信息加入FIB
FIB表：把路由表中最优路由条目导入到FIB中，也可是由ARP生成的，是正真指导数据转发的表
每个VLAN的网段都不同，路由器默认不转发组播可广播
ipsec中：AH的IP协议号51/ESP的IP协议号50
BGP每60s一次用TCP179向对等日发送keeplive消息
router-id只是路由器的名字，与IP没有关系
不论V4还是V6，前缀或网段表示一个大范围，接口标识或主机地址表示法范围里的主机！
组播地址FF02::1代表所有节点
组播地址FF02::2代表所有路由器
OSPFV3使用FE02::5而V2使用224.0.0.5		IKE用UDP500
vrrp中备用路由器等待3倍超时时间（优先级越高越好，默认抢占模式）
MPLS中所有网络设备默认都是DU方式（下游主动分配）+自用模式（保留非下一跳）+有序方式（从下游学来后再交给上游）
BGP的邻居不一定直连（手工指定邻居地址）。BGP把各自AS的路由信息与其他AS交互
BGP从本AD外得到的路由信息发给所有邻居（EBGP/IBGP）但从内部得到的路由信息不再给内部
MPLS中使用的LDP标签分配协议是LER设备根据路由表项来生成标签的，LER与LSR都换互标签后根据标签进行转发
IPV6中所有的路由器之间都是用链路本地地址FE80且同一链路两端的地址前缀必须相同
IPV6没有广播的概念，使用新的任播地址类型（MAC请求时使用组播发送，对方单播回应）
因为路由器的接口是一个网段：所以IPV6中路由器给其前64位地址，自己用EUI-64格式生成后64位的接口标识成为完整的V6地址
IKE（Internet Key Exchange，因特网密钥交换），可实现两端密钥的自动协商功能（AH协议号51，ESP协议号50）
IKE使用UDP：500，IKE使用DH在网络中安全的分发密钥/身份验证，IKE周期性更新SA和密钥
ipsec中只有隧道模式才生成新的IP报头（由于传输模式没有生成新的IP报头所以不能出公网）传输模式在PC端即加密
所有使用IP协议的应用/服务都可使用IPsec而不必对这些应用/服务本身做修改
HTTPS是HTTP的安全版：在HTTP下加入SSL层来增强安全性
通常广域网的数据传输速率比局域网高而信号的传播延迟却比局域网要大得多
TCP使用协议号：6，UDP使用协议号：17，TCP/UDP端口各65535个（前1024个系统保留，后面的分配给用户）
收敛时间在路由器指从拓扑发生变化到网络中所有设备都学习到的时间，在交换机指端口从阻塞到转发的时间
MTU是最大传输单元：2/3层都有MTU，3层MTU是IP MTU（3层MTU要小于2层的MTU，否则会被分片传输）
OSPF经传输层而直接封装于IP报文
IPV6在PC中是自动配置的，客户不需设置
若旧路由协议迁移到新路由协议前要求更改IP编址方案时须提前仔细规划如：迁移前使用的是RIP协议，可将接口配第2个IP地址（如下）
在掩码后添加secondary字段（配置第二个地址来实施OSPF协议的运行），添加OSPF协议，在OSPF中宣告secondary地址
MPLS封装识别：链路层的TYPE字段使用0x8847表示承载的是MPLS报文（0800是IP报文）
Ipsec提供三种功能：加密|认证|完整性
Ipsec通过三个要素进行安全保护：1.验证头AH		2.封装安全载荷ESP	3.互联网密钥管理协议IKMP
Ipsec不是单独的而是一组协议
1.IKE：应用层协议，用于协商SA（安全联盟）其不用于数据处理
2.AH：验证数据完整性，不进行加密
3.ESP：验证数据完整性的同时进行加密
-----------------------------------------------------------------------------------------
广域网：
PSTN：	共用电话交换网络
ISDN：	综合业务数字网（在电话线路上同时提供音频，视频和数据服务的数字网络）
xDSL：	用户数字线路
ATM：	异步传输模式（基于异步时分多路复用，采用信元交换代替分组交换）
X.25：	公共分组交换网络
FR：	帧中继（虚电路实现，PVC：永久虚电路）
DDN：	数字数据网（利用数字信道提供半永久性连接电路的数字网络）

链路层：PSTN DDN  xDSL
物理层：ISDN X.25 FR ATM
-----------------------------------------------------------------------------------------
网络模型：
旧80/20原则：80%的流量限制在本地，20%的流量需要穿越主干
新80/20原则：20%流量在本地，80%的流量将通过主干网络

核心层：
  1.整个网络的快速转发
  2.快速交换
  3.高可靠性
汇聚层：
  1.三层交换机
  2.基于策略的连接
  3.PC网关指在三层交换机上
  4.保证可靠性                                                      
接入层：
  1.直接对用户接入          
  2.二层交换机
-----------------------------------------------------------------------------------------802.1*
802.1d	 STP：生成树（BPDU 2s一更新）
802.1w	 RSTP：快速生成树
802.1s	 MSTP：多生成树
802.1q	 Trunk（Dot1Q）
802.3ad	 LACP（链路聚合协议）
802.1x	 基于C/S的访问控制和认证协议
802.1ac	 WIFI标准（5GHz）
802.11n	 WIFI标准（2.4GHz/5GHz）
-----------------------------------------------------------------------------------------
光纤分为二类：
1.单模光纤：直径小，激光光源，快/远/贵（黄色）
2.多模光纤：直径大，发光二极管光源，慢/近/便宜（桔黄色）

数据链路层分二个子层
1.逻辑链路控制层LLC：	接收数据并附MAC和控制信息后发往接口
2.介质访问层MAC：	供物理链路的访问与站点标识

二层帧的类型字段：
0X0800：IPV4
0X86dd：IPV6
0X0806：ARP
0x8847：MPLS				//MPLS标签位置：[帧][MPLS标签][IP头][数据]

双绞线分三种类型：
1.直通：
2.交叉：	12发/36收（T568B：白橙|橙|白绿|蓝|白蓝|绿|白棕|棕）
3.全反：	反转线（console线）

BGP	TCP：	179
AH	IP：	51
ESP	IP：	50
OSPF	IP：	89
DNS	UDP/TCP	53
POP3	TCP：	110
SMTP	TCP：	25
Telnet	TCP：	23
SSH	TCP：	22
IMAP4	TCP：	143
mysql	TCP：	3306

广域网提供面向连接和无连接两种服务模式：
1.面向连接：虚电路方式，可进行拥塞避免（因其在建立虚电路时已对资源进行了预先分配，如缓冲区）
2.无连接：  数据报方式，要实现拥塞控制比较困难（因广域网中的交换机不存储广域网状态）
-----------------------------------------------------------------------------------------
TCP传输控制协议：
面向连接，3次握手建立/4次断开拆除，因其面向连接所以仅用于端到端通讯，面向连接服务如：Telnet、FTP、rlogin、X Windows、SMTP等需高度可靠性的服务

特点：
差错重传： 提供可靠数据流服务，采用“带重传的确认机制”实现靠性传输
滑动窗口： 进行流量控制：（窗口表示其接收能力，其限制发送方发送速度，当网卡缓存少时则窗口变小）
可靠性：	   序列号/确认（未按顺序收到的包被排序且损坏包可被重传从而实现虚电路连接）

UDP：
无连接，仅包括目的/源端口号和CRC校验，因不需事先建立连接所以可实现广播（因不需接收方确认而属于不可靠传输，可能会丢包）其主要用于面向查询/应答服务如DNS，这些服务交换的信息量很小
-----------------------------------------------------------------------------------------交换机
IEEE802.3帧：
格式：[前导码] [帧开始符] [目的MAC] [源MAC] [长度] [类型 ][数据和填充] [帧校验序列：FCS]
1.前导码：	用于同步
2.帧开始符：	指明下个字节是目的MAC字段
3.目的MAC：	接收方
4.源MAC：	发送方
5.长度：		帧的数据字段长度（若小于64字节则进行“填充”使其长度满足）
6.类型：		帧上层的协议类型（标识上层协议如0x0800表示IP，0x0806表示ARP，0x08dd表示IPV6）
7.数据/填充：	通常是三层的数据单元，于TCP/IP是IP包
8.帧校验FCS：	提供判断是否传输错误，错误则丢弃此帧

交换机：
使用全双工，半双工采用CSMA/CD机制（载波监听多路访问/冲突检测），交换机可进行物理编址，隔离冲突域，其基于收到数据帧的源/目的MAC工作，进行帧错误校验，帧序列以及流控，提供对VLAN/PVLAN的支持，对链路汇聚的支持，防火墙功能等，其分为广域网交换机和局域网交换机，广域网交换机应用于电信领域，提供通信的基础平台，常见的是局域网交换机，用于连接终端设备。交换机有管理VLAN用于自身的管理，通常将陌生VLAN设为管理VLAN并为其配地址和默认网关，该默认网关仅供交换机自身用。当交换机收到目的MAC为全1或MAC表中没有对应目的MAC的表项时以广播方式将报文向除收接口外所有接口泛洪，当交换机收到的是帧是多播帧时也会泛洪

交换方式：
1.直通方式：
端口收到帧时获取其目的MAC并用内部动态查找表转换成相应输出端口把数据包直通到相应端口实现交换，因不需存储而延迟小交换快但因数据包内容未保存所以无法检查所传送的数据是否有误，且没有缓存而不能将不同速率的输入/输出端口直接接通，易丢包，总之直通转发即设备收到报文的64字节（目的MAC地址）后立即转发

2.存储转发：
将收到的数据先存储后进行CRC检查，对错误包处理后再看目的MAC并通过查找表转换成输出端口送出因此延时大，但其可支持不同速率端口间转换，应用广泛

3.碎片隔离：
介于直通和存储转发间的解决方案：仅检查数据长度是否足够64字节，小于64字节则是假包直接丢弃而大于64字节则发出

CAM表：
交换机维护CAM表，该表是MAC|端口|VLAN的映射关系表，交换机根据CAM表来转发，此外还有TCAM，TCAM只存在于三层交换机中，TCAM以线速处理ACL查找：完全匹配区域/最长匹配区域/第一个匹配区域，对需最长匹配查找的表最有用

MAC表：
记录与本设备相连设备的MAC|端口|VLAN ID。转发时根据报文的目的MAC查询MAC表快速定位出接口而减少广播，MAC表中自动生成的表项并非永远有效；每个表项都有生存周期，到达生存周期仍得不到刷新将被删除（老化时间），若到达生存周期前纪录被刷新则其老化时间刷新

基于CEF的MLS：
在三层交换机中CEF和MLS转发模型分别为控制平面/数据平面（互相独立）控制平面指第三层的引擎（处理器），数据平面指进行交换的硬件组件（如ASIC芯片），控制平面将所有路由选择信息放入二层的FIB表，数据根据FIB表进行快速转发（FIB是路由表在二层的镜像）CEF使用FIB做出基于目标IP前缀的交换策略

MAC表分三类：
1.动态表项：自动学习得到（有老化时间）
2.静态表项：需手工配置，可提高接口安全性（不老化）手工配置的表项优先级高于自动生成的表项
3.黑洞表项：用于屏蔽指定用户报文，需手工配置（不老化）

二层隔离：
采用端口隔离可实现同VLAN内端口间的二层隔离（只需将端口加入到同一隔离组中）同隔离组的组端口若互访需3层网关，在华三交换机中仅支持1个隔离组，由系统自动创建，用户不可删除或创建其它隔离组（有些设备支持多隔离组）
-----------------------------------------------------------------------------------------EC：链路聚合
端口聚合前提：相同的速率|双工|接口模式|接口属性

端口聚合协议：
1.PAGP：	思科私有
2.LACP：公共标准（链路聚合控制协议：802.3ad）

链路聚合控制协议LACP：
聚合链路二端通过互发链路聚合控制协议数据单元LACPDU来交互聚合的相关信息
字段：
1.LACP优先级
2.聚合优先级
3.端口编号
4.MAC地址
5.操作Key

LACP超时时间：
是成员端口等待接收LACPDU的最大时间，在三倍LACP超时时间仍未收到对端LACPDU则认为对端成员端口失效（短超时1秒/长超时30秒）

LACP工作模式:
1.被动模式passive：端口不主动发送LACPDU（当接收到对端发送的LACPDU后才进入状态）
2.主动模式Active： 端口主动发送LACPDU进行LACP的计算

成员端口状态：
1.选中状态端口：   可参与转发
2.非选中状态端口： 不参与转发

注：
参加聚合的端口须连续。删除聚合接口时将自动删除对应的聚合组且该组内的所有成员端口将离开该组
-----------------------------------------------------------------------------------------Smart & Monitor link
Smart/Monitor link是华三私有协议：
1.Smart Link：	双上行的组网解决方案；实现高可靠链路冗余备份和故障后的快速收敛（主/备切换）
2.Monitor Link：	对Smart Link的补充（监控自身上行链路以达到自身上/下行链路同步状态的目的）

Smart Link：
检测其上行两个链路Up/Down状态，将两个上行链路加入到同组中（分别为主/备）备链路时刻准备着当主Down掉时切换为主来承担流量，主备切换后因拓扑变更所以上联设备的MAC地址需重新学习因此向上发送Flush报文刷新上联设备的ARP/ND表项（即主/备切换后备发送Flush报文来刷新对端MAC）其中主/备角色可抢占，若主又恢复则备链路让位（默认不进行角色抢占而需手动开启）

Flush格式：				
Destination MACAddress = 010F-E200-0004	地址固定（上联的SW收到此MAC地址的报文即知是Flush）
Source MAC Address			源MAC
Control Type=0X01			控制类型（0X01代表让其刷新ARP/ND）
Control Version=0X00			版本
SWID 					交换机ID
Control VLAN ID	（控制VLAN）		因Flush使用TRUNK链路发到上联SW所以此ID是告知其应刷新哪个VLAN的ARP/ND
Auth-mode				认证模式（支持验证）
Password 				密码
VLAN Bitmap 				VLAN位图（代表Smart Link的保护VLAN）
FCS 					校验

Smart Link负载分担：
把上联的每个端口划分到多个不同Smart Link组使其在不同的组中承担不同的主/备角色（充分利用资源）

Monitor link：
监控设备上行端口根据其up/down来触发下行端口的up/down，从而让下游设备Smart Link中的备链路进行切换（上行链路故障后其立即把下行链路的端口电源关闭）

Monitor Link特性：
1.若组中所有上行链路成员都Down时将强制使其下行链路成员端口都为Down
2.若组中只要有1个上行链路成员从Down转Up将使下行链路成员端口都恢复Up

Smart link命令：
]#smart-link group 组号
group1]#protected-vlan reference-instance #		//配置Smart的保护VLAN（MSTP中的实例）
group1]#flush enable 控制VLANID				//开启Flush并指定让上游刷新哪个VLAN的MAC/ND
group1]#port interface-type 端口 { master/slave } 	//组成员端口
group1]#preemption mode role				//抢占功能（默认关闭）

Monitor link命令：
]#monitor-link group 组号
group1]#port interface-type 端口 uplink			//上行链路成员
group1]#port interface-type 端口 downlink		//下行链路成员

注：
Smart/Monitor仅应用于交换机的Trunk间
Smart组的保护VLAN是通过引用MSTP中的实例实现的
Smart像MSTP一样为其下联的某个或多个VLAN服务：为VLAN实例做Smart Link组来设置主/备（保护VLAN）
-----------------------------------------------------------------------------------------路由器
思科设备中打开/关闭有类路由功能：ip classless/ no ip classless

路由数据库/路由表：
所有可能的路由路径存储在数据库或拓扑表中，仅最佳路由路径存储在路由表中

路由表转发原则：
目的地址最长匹配：精度最长者优先（最长匹配原则），若匹配的精度相同再比较管理距离（AD）越小优先，若AD值相同再比较度量（Metric）越小越优先，若都没匹配再走默认路由

路由迭代：（递归查询）
对于BGP路由（直连EBGP路由除外）和静态路由及多跳RIP路由而言其下一跳可能并不直接可达因此需再次从路由表找到到达下一跳的直连出接口；即通过路由下一跳信息来找到自身直连出接口的过程

缺省网络：（标识为S*）
当使用：ip route 12.18.1.0 255.255.0.0 1.1.1.1	//配置静态路由后：
再使用：ip default-network 12.18.1.0		//把此静态路由记为缺省网络（找不到目的地址时采用此路由）

抑制接口：
只收不发路由更新；RIP不发路由更新而OSPF中不发送Hello包，用其可控制更新的流向，也称静默/被动接口
router)#Passive-interface default		//全局将所有接口设为被动接口模式
router)#no passive-interface s0/1		//指定发送路由信息的接口

路由汇总：
在RIP报文出接口汇总：-if)#ip summary-address rip 10.0.0.0 255.252.0.0
在OSPF中ABR的进程对本区域1汇总：-router)#area 1 range 10.0.0.0 255.252.0.0

修改管理距离：
修改自身AD值，在旧协议迁移到新协议时采用：Router)#disntance 110
-----------------------------------------------------------------------------------------
路由引入：（redistribute）
是将一种协议的路由导入到另一种协议或同协议不同进程间引入的过程（也称重分发）引入时需考虑双方度量值计算方式的不同，route-map常配合其使用一些策略。若不指定度量值则使用种子度量值（默认度量值），不添加subnets关键字则只注入主类网络路由（不携带子网）一般必须添加subnets使其携带掩码信息

种子度量：（default-metric）
引入时不指定度量时的默认度量值即种子度量值，其在AS内正常递增
1.注入RIP时默认无穷大
2.注入OSPF时为OE2（度量值=20）
3.注入BGP时不固定（依据IGP协议的值）

路由引入规划：
1.单边界引入：	单点路由引入
2.多边界引入：	多点路由引入
3.单向路由引入：	边缘注入核心（边缘网络不学习核心网络而仅需默认路由）
4.双向路由引入：	双方互相注入（不建议）

路由误判：
多边界引入（多点路由引入）时路由引入规划不当将导致路由环路，如IP与OSPF网络的边缘有两台边界路由器同时运行了RIP与OSPF，当OSPF通过其中一台边界路由器注入到RIP中时整个RIP网络都学到了此路由明细，此时另一边界路由器上的路由本来就最近的RIP认为通过此路由网络最短而造成路径不是最优或环路（AD值大的引入到AD值小的一般没问题）

路由误判解决办法：
1.双点双向路由引入时：在引入端路由明细添加标签，在另1端网络边界路由器阻止学习带此标签的路由（也可用分发列表阻止）
2.双点单向路由引入时：合理规划其度量值来避免次优路径产生

注：
路由协议的规划：从边缘到核心，从IGP到BGP
双点双向路由引入易产生路由误判（因AD值的原因）但AD值大的引入到AD值小的一般没问题
-----------------------------------------------------------------------------------------
服务质量Qos：
对不同的流提供不同优先级：对实时性强且重要的数据优先处理而对于实时性不强的普通数据提供较低优先级，拥塞时甚至丢弃（因其仅在堵塞时才起作用所以不能代替带宽的升级）

服务模型：
1.Best-Effort service		尽力而为服务模型
2.Integrated service		综合服务模型，简称Int-Serv
3.Differentiated service	区分服务模型，简称Diff-Serv
-----------------------------------------------------------------------------------------VLAN
VLAN概念：
1.每个VLAN是广播域
2.简化管理
3.提高安全（VLAN间不直接通信）
4.交换机所有帧默认都带VLAN Tag 1（入接口加Tag/出接口减Tag）
5.范围：1～4094（源MAC字段后插入Tag字段并用新FCS替代旧FCS）

分类：
1.基于端口
2.基于MAC（对没找到对应MAC-VLAN表项的未打标签报文将根据其它方式为其划分）
3.基于三层协议 
4.基于三层组播 
5.基于策略划分 
6.用户定义 

Trunk干道链路：
Trunk链路中除本征VLAN外其他VLAN都有Tag，本征VLAN即Native VLAN，其报文不封装tag就可在Trunk传输（本征VLAN不打标签但Trunk两端的本征VLAN需配置一致，默认tag1）思科设备间链路是否形成Trunk可自动协商（DTP）

帧的Dot1q字段：
Priority：帧优先级（0～7）越大越优先（阻塞时先处理优先级高的）
CFI：	  表示是否为普通帧（普通以太网帧CFI=0）
VID：	  即VLAN号，12bit（1～4094）
-----------------------------------------------------------------------------------------ACL
访问控制列表使用包过滤技术读取3/4层包头信息如：源/目的IP、源/目的端口等（用反掩码）

标准ACL：仅检查源地址，范围1-99或1300-1999
扩展ACL：可对协议类型、源/目的IP、源/目的端口、TCP连接建立等进行过滤，范围100-199或2000-2699

注：
ACL默认拒绝所有，若放行其他流量需最后添加：permit any。ACL配置后需定义in/out方向，也可搭配路由策略或NAT等进行使用
应尽可能把ACL放置在靠近被拒绝的流量来源处，扩展ACL要尽量靠近源端（还有基于时间的ACL和动态ACL）
ACL只能过滤穿过路由器的数据流量而不能过滤自身发出的数据
-----------------------------------------------------------------------------------------NAT
NAT转换对终端透明：对内网终端来说其的源/目的IP都没改变，对外网终端来说其仅了解NAT转换后的公网IP但对内网不了解因此提高内网安全性（NAT与ACL一样需定义in/out方向）

有三种类型：
1.静态NAT：	内/外转换的IP固定
2.动态NAT：	需先用ACL定义源地址范围再用NAT定义转换地址池后捆绑
3.PAT/NAPT：	若加overload关键字则启用PAT功能（公网IP的1个端口代表1个内网IP）
-----------------------------------------------------------------------------------------PPP
PPP协议：
串行线路的帧格式，是在点到点链路中承载三层数据的二层协议，其易于扩充提供验证并支持同/异步通信，支持链路的聚合/回拨/压缩等（为增加带宽可将多个PPP链路捆绑（称为MultiLink PPP或MP），可为每条PPP链路提供基于流量的计费统计功能来统计in/out方向流经本链路的报文数/字节数（用于配合AAA应用模块计费控制使用）

PPP二个子协议：
1.链路层控制协议LCP：建立，拆除和监控数据链路（在建立3P链路阶段协商MTU，验证等链路层参数）
2.网络层控制协议NCP：协商双方在该链路之上的三层协议类型和地址

过程：
发起方用LCP帧进行链路协商（工作方式/MTU/验证等二层的参数）LCP协商完之后若配了PAP/CHAP验证则在此阶段验证，发起方再用NCP协商上层使用何种协议并确定双方IP地址（通信链路将一直保持到LCP或NCP帧关闭链路或故障）

PPP验证：
1.PAP：		二次握手方式的明文认证（被验证方发送用户名/密码，验证方来匹配本地用户表）
2.CHAP：		挑战方式，三次握手周期性验证源端节点身份（用MD5算法而不直接传送密码）
3.MS-CHAP：	微软开发
4.MS-CHAP-V2：	微软开发，第2版（CHAP分单/双向验证，双向即互相验证身份）
-----------------------------------------------------------------------------------------RIP
RIP使用二种数据包：	
1.更新包
2.请求包

概念：
1.RIP使用UDP:520（RIPng使用UDP521）
2.管理距离120	
3.最大跳数15（16不可达）
4.等价路径4 （最大6）
5.更新周期30s（收到跳数16而中毒时等待此路由明细60s）
6.失效时间3min
7.死亡时间4min

RIPv1： 		RIPv2：
不带子网 	支持子网
无认证 		明文/MD5认证
无VLSM/CIDR 	支持VLSM/CIDR
广播 		组播（224.0.0.9）
有类路由协议 	无类路由协议

RIP特性：
1.水平分割：	从某端口学得网段将来发送自己的路由更新时不把此网段信息通告出该端口（从哪学的不再告诉哪）
2.路由中毒：	下联网段故障后将其跳数设为16并告知其他路由（其他路由器认为其可能Down而等待此网段60s）
3.毒性逆转：	收到中毒不可达信息后其发送的更新将打破水平分割原则来告知故障处理器（我已了解了）
4.抑制计时器：	收到中毒后启动计时器60s等待下次其告知此路由又可达（若超时仍不可达则删掉）
5.触发更新：	不按30s的周期更新规则（当本地某路由失效时立即更新RIP报文告知其他路由器）

思科设备格式：
router)#maximum-paths number-paths	//修改rip支持等价路径的数量
router)#passive-interface G 0/0		//只收不发RIP报文
router)#neighbor 172.16.1.3		//指定单播更新的目的地址（不用组播）
if)#ip summary-address rip 4.4.0.0 255.255.252.0	//汇总（在RIP报文出接口设置）
-----------------------------------------------------------------------------------------OSPF备忘
开放最短路径优先OSPF：
特点：
1.适应大规模网络
2.收敛快且无环路（SPF算法：计算出到达任意目的地的唯一路由）
3.支持VLSM/CIDR（需手动进行汇总）
4.支持等价路由
5.区域划分（结构化网络）
6.提供路由分级管理
7.简单口令和MD5认证（接口/区域验证）
8.组播更新（224.0.0.5/6）
9.接口敏感型协议
10.度量值用Cost（10^8/接口带宽，路由表中开销值是LSA报文沿路的入接口Cost累加）
11.LSA最大存活1小时（30分刷新/次，扩散到整个区域）

OSPF直接封装于IP：[IP协议号89][OSPF报文头][OSPF报文类型][FCS]

组播地址：
DR Other使用：224.0.0.5
DR/BDR使用：  224.0.0.6（仅在MA网络：为减少LSA交互量所有DRother仅向DR/BDR发送LSA）

DR&BDR选举：		//DR/BDR仅存在MA网络中（OSPF根据接口的二层封装判断网络类型）
先比较接口优先级		优先级基于接口（“0”不参与选举，默认“1”，最大255）
再比较ROUTER-ID		默认最大环回口或最大物理口（建议手工指定Router-id，它是域内唯一标识）

OSPF五个报文：
Hello：	建立/维护邻居关系	//广播链路10s/次，点到点30s/次
DBD：	链路状态数据库描述	//描述本自己的LSDB中各个LSA头部的摘要
LSR：	链路状态请求		//请求对方DBD中自己没有的LSA详细信息
LSU：	链路状态更新		//回应对方请求的LSA（1条或N条，LSA被放在LSU中而LSU在建立邻居或拓扑变更时发送）
LSAck：	更新确认报文		//确认收到（应答完成后最终的状态为：FULL）

OSPF的三张表：
邻居表				//建立邻居前提：区域相同|认证密码|Hello时间|末节标签
链路状态数据库LSDB		//整个网络的拓扑
路由表				//根据LSDB用SPF算法生成路由表

邻居建立过程：	//以下是自己看对方的状态
1.DOWN		不断发Hello包（未收到对方的ello包情时）
2.INIT		收到对方Hello包且学到对方Router-id后
3.Two-way	对方发来的hello包有自己的Router-id时（MA中在此选举DR/BDR）
4.Ex-start	比较Router-id选择主从（主发DBD/从收DBD）
5.Exchange	交互双方DBD
6.loading	双方用LSR/LSU交互LSA
7.full		用LSAck回应并收敛后的最终状态
-----------------------------------
DBD中三个标识位：
I：	因有多个DBD包：I位置1表示本DBD包是第1个
M：	因有多个DBD包：M位置1表示本DBD是最后1个
MS：	双方交互DBD时都认为自己是Master（MS为1）最终比较出的Rouer-Id大的一方将自己的MS置1
	由Master规定起始序列号（每发一个DBD序号+1）而Slave方使用Master的序列号作为确认
	主从双方利用序列号来保证DBD传输的可靠/完整

LSA三个位：（发送方用此描述自己的身份）
V=1 虚链路
E=1 ASBR
B=1 ABR
-----------------------------------
OSPF多区域概念：
1.防止LSA交互量在本域过多
2.区域抖动让SPF重运算
3.便于管理/提高拓展性
4.区域边界做汇总来减小路由表（区域间的设备是ABR，所有ABR须有接口和骨干连接）

1类LSA：路由器LSA	//普通LSA，描述：|链路信息|cost|掩码|度量|自己的角色|等...
2类LSA：网络LSA		//告知整个MA内的Router-ID，因没有cost信息需1类配合（2类LSA仅存在MA网络由DR产生）
3类LSA：网络汇总LSA	//由ABR发出（携带其他区域路由信息）
4类LSA：ASBR汇总LSA	//由ASBR所在区域的ABR产生和发出（告知其他区域去ASBR的路由，ASBR所在区域不用4类LSA)
5类LSA：AS外部LSA	//由ASBR产生（告知AS外部明细路由）
7类LSA：NSSA外部LSA	//与5类LSA作用相同但仅在NSSA中；因NSSA不能有5类LSA（NSSA中的ABR向其他区域进行7转5）
-----------------------------------
OSPF路由标识符：		//E1优于E2且不论Metric大小，OE优于ON
O	区域内路由
O IA 	区域间路由（3类）
O E1 	COST=外部的cost值+内部的cost值
O E2	5类：COST=外部的cost值（OE2的Cost固定）
O N1 	NSSA区域AS外部路由
O N2 	NSSA区域AS外部路由（ON2的Cost固定）
-----------------------------------
末梢区域stub area：
因末梢区域通过ABR即可与外部通信所以也可不要4/5类LSA而仅需3类和3类默认路由（O *IA）即可，所有特殊的区域永不存在4/5类LSA（ABR自动阻挡4/5类LSA）

完全末梢区域totally stub area：
在stub基础上再精简，只要一个3类默认LSA（O *IA），不再考虑外部区域情况而只要本区域的出口即可

NSSA非完全末梢区域not so stub area(NSSA)：
当stub区域又连接其他的动态路由选择域时类似于一片叶子又长了一片叶子（在非骨干区域内注入时产生7类LSA，路由表中标记为：O N）其没有4/5类LSA而多了7类LSA，当7类LSA去其他OSPF域时由NSSA的ABR转为5类（NSSA的ABR可理解为常规区域的ASBR，因它向别的区域下发5类LSA来通告NSSA区域的外部路由）当NSSA有多个ABR时只有router-id大的进行7转5（NSSA默认不下发3类默认路由）

完全非完全末梢区域：
在NSSA基础上再精简，不要3类LSA而仅下发3类默认LSA（只要出口）
-----------------------------------
七种LSA活动范围：
骨干区域：12345
标准区域：12345
stub区域：123+3类默认路由
完全stub：12 +3类默认路由
NSSA区域：1237
完全NSSA：127+3类默认路由

注：
ABR进程中可手工对本区域的路由明细汇总后发给其他区域，ASBR进程中可手工对外部路由明细汇总后在发给其他区域
若引入时不指定具体度量值时其他协议注入到OSPF中时标识为“OE2”默认度量值是“20”且不递增
分发列表仅能用在OSPF的in方向（因分发列表不能过滤OSPF中out方向的LSA信息）
-----------------------------------------------------------------------------------------IPV6
IPV4地址：
A：1.0.0.0～126.255.255.255		//127.0.0.0 ～ 127.255.255.255是环回地址
B：128.0.0.0～191.255.255.255		//169.254.0.0～169.254.255.255是保留地址（没从DHCP得到IP前临时用的地址）
C：192.0.0.0～223.255.255.255
D：224.0.0.0～240.255.255.255
私有地址：
A：10.0.0.0～10.255.255.255
B：172.16.0.0～172.31.255.255
C：192.168.0.0～192.168.255.255
-----------------------------------
V4缺点：终端的配置不够方便，缺乏安全性和Qos
V6优点：终端的地址无需配置，增强安全性和Qos，开放性（因V6没有网段和广播的概念所以不使用ARP）

形式区别：
V4用点分10进制：172.16.1.0/24
V6用冒号16进制：001:0410:0000:0001:0000:0000:0000:45FF/64

V6地址表示方法：
完整格式：	2001:0410:0000:0001:0000:0000:0000:45FF		//16bit/段（8段）
前导0压缩：	2001:410:0000:0001:0000:0000:0000:45FF		//第一个0省去
全0段压缩：	2001:410:0:0001:0:0:0:45FF			//全0段用1个0
连续0段压缩：	2001:410:0:0001::45FF				//连续为0段之间用::表示

V6地址构成：	2001:0410:0000:0001:0000:0000:0000:45FF/64
1.前缀		2001:0410:0000:0001				//有些类似V4中网段的思想
2.接口标识符	0000:0000:0000:45FF				//相当于V4中的主机部分
3.前缀长度	/64：类似V4中的掩码部分
-----------------------------------
V6地址分类：
V6没有地址分类的概念，仅3种地址：单播/组播/任播			

单播：
1.未指定地址：	前缀 ::/128
2.环回地址：	前缀 ::1/128	（固定格式）
3.链路本地地址：	前缀 FE80::/10	（路由器间的接口使用链路本地地址且前缀需相同“FE80::/#”）
4.站点本地地址：	前缀 FEC0::/10	（私有）
5.全球单播地址：	前缀 2000::/3	（公有）

组播：		前缀 FF02:/8	（FF开头）
任播：		借用单播地址	（距离其最近的地址接受其数据包）
-----------------------------------
V6邻居发现协议ND：
是一组确定邻居节点间关系的消息/过程（其代替了V4中的ARP、ICMP、路由器发现和ICMP重定向等并进行改进）

功能：
1.地址解析（RS/RA）
2.邻居可达检测（NS/NA）
3.地址重复检测
4.地址自动配置
5.路由器重定向

ND封装于ICMPV6报文中：[数据链路帧头][IPV6报头][ICMPV6报头][ND协议数据]
ND协议类型：
Type133-路由器请求报文	（RS:Router Solictiation）
Type134-路由器公告报文	（RA:Router Advertisement）
Type135-邻居请求报文	（NS:Neighbor Solictiation）
Type136-邻居公告报文	（NA:Neighbor Advertisement）
Type137-重定向消息报文	（Redirect）

主机的ND：
1.探索邻居路由器
2.探索地址、前缀等配置参数

路由器的ND：
1.通告路由器的存在、为主机配置的参数及前缀
2.通知主机更好的下一跳地址以便转发针对特定目标的数据包

结点的ND：
1.既解析IPv6数据包所转发到的邻居结点的链接层地址又确定邻居结点的链接层地址何时发生变化
2.确定数据包是否可发送到邻居和能否收到来自邻居的数据包
-----------------------------------
IPV6的地址解析：
使用ND报文的Type135/136解析V6地址对应MAC并进行邻居可达性状态的维护（邻居不可达检测即NUD）增强了解析协议与底层链路的独立性和安全性，减小报文传播范围（没有广播，比ARP更好）

解析过程：
主机A用Type135并组播其解析请求，主机B用type136单播告知自身MAC；MAC请求方使用固定的FF02::1:FF开头的组播地址（组播地址在接口标识中加入对方V6地址的部分地址）请求对方MAC来建立邻居缓存表（因地址解析时使用的组播地址前缀后加入对方V6单播的部分地址所以只有被请求方能收到，之所以能够加入对方的部分地址是因其通过EUI-64格式来学得）
-----------------------------------------------------------------------------------------
IEEE EUI-64格式：
根据本机的MAC自动生成V6地址中的接口标识（EUI-64仅生成IPV6的64位地址，前64位是链路本地地址FE80::/64）

本机MAC地址：		00-f1-f3-13-61-d4
计算完成后的本机V6地址：	fe80::2f1:f3ff:fe13:61d4/64（自动配置的默认前缀是链路本地地址FE80::/64）
计算方式：
因V6链路本地地址确定了前64位：	FE80::/64 还有后64位地址没确定因此利用MAC地址
因需后64位而MAC仅48位还少16位：	因此在MAC中间添加FF-FE：00-f1-f3-FF-FE-13-61-d4	
将MAC地址两两一组合并：		00f1-f3FF-FE13-61d4
将MAC地址第7位0/1取反：    	00f1 = 0000-0000-1111-0001 取反：0000-0010-1111-0001=02f1
最终的MAC地址：			02f1-f3FF-FF13-61d4
将接口标识位改为EUI-64格式：	FE80::02f1-f3FF-FF13-61d4/64

思科设备格式：
nfig)#ipv6 unicast-routing			//全局开启V6转发功能
nfig-if)#ipv6 address FE80::1 link-local	//接口使用链路本地地址FE80::1
nfig-if)#ipv6 address 2001::1/64		//接口使用全球单播地址2001::1/64
nfig-if)#ipv6 address 2001::1/64 eui-64		//接口使用全球单播地址2001::1/64，EUI-64计算后64位
nfig-if)#ipv6 address autoconfig		//自动获取V6地址（PC用）
R#show ipv6 interface brief			//查看V6地址和接口的映射表
R#ping ipv6 12::2				//ping一个IPV6地址

注：
路由器的接口一般不用EUI计算地址，路由器间同一链路的V6地址需前缀相同（类似V4相同链路相同网段思想）

V6报头格式：（共8段）
Version			版本
traffic class		流量分类
flow label		流标签（新增字段）
payload length		负载长度
Next Header		下个数据头
Hop Limit		跳数限制
source address		源地址
destination address	目的地址
-----------------------------------
IPV6地址的自动配置：
有状态配置：DHCP
无状态配置：根据路由器的地址前缀信息自动完成V6地址相关的配置（即插即用且迁移方便）

无状态地址配置原理：
ND协议用组播前缀：FF02::2代表所有路由器在链路上交互RS/RA完成路由器发现和接口前缀发现（路由器使用组播FF02::1回应）
PC开机请求路由器V6地址前64位（前缀）收到路由器接口V6地址前64位后再把自己MAC地址计算添加进后64位形成完整地址（EUI-64）
-----------------------------------
V6路由协议：
1.BGP4+ （路径矢量）
2.RIPng	（距离矢量）
3.IPv6-IS-IS
4.OSPFV3

RIPng：
RIPng是对RIPV2的升级（工作机制与RIPV2相同）
其针对V6有如下修改：
1.UDP端口从520变为521以防RIP冲突
2.组播从224.0.0.9改为FF02::9
3.源地址是链路本地地址FE80::/10

思科设备格式：			
nfig)#ipv6 unicast-routing	//全局开启V6转发功能
nfig)#ipv6 route 1::/64  2::1 	//静态路由（原理和V4相同）
nfig)#ipv6 route ::/0    2::1	//默认路由（::/0代表所有网段）
nfig)#ipv6 router rip abc	//启用V6路由协议RIPng（abc是进程标识，可数字/字符）
nfig)#interface fastethernet 0/0
nfig-if)#ipv6 rip abc enable	//在接口中启用（指定在哪个协议的进程中宣告）
				//在V6中所有路由协议学到的下一跳都是链路本地地址FE80::

OSPFV3：
V3中运行机制稍微变化（功能有所改变）V3保留与V2相同的5类协议报文与Hello|DBD|LSR|LSU|LSAck（细节不同）
相同点：
1.相同的SPF算法
2.区域和Router-ID未改变
3.相同的邻居发现与邻接形成机制
4.相同的LSA扩散机制与老化机制
不同点：
1.V3基于链路运行（Link）而V2基于网段运行（Network）
2.V3在同一链路可运行多个实例（仅在MPLS-VPN中使用）
3.V3用Router-ID标识邻居而V2用IP标识邻居
4.V3取消了报文验证
5.V3的地址使用组播：FF02::5

思科设备中：
nfig)#ipv6 unicast-routing		//启用V6的路由选择
nfig)#ipv6 router ospf 1		//启用ipv6的OSPF
nfig-rtr)#router-id 1.1.1.1		//Router-ID
nfig)#interface fastethernet 0/0	
nfig-if)#ipv6 address 1::1		//接口V6地址
nfig-if)#ipv6 ospf 1 area 0		//在接口中启用相应协议和所属区域
nfig-if)#ipv6 priority 20		//接口优先级（使其成为DR/BDR时使用）
nfig-if)#ipv6 cost 20			//接口开销
-----------------------------------
V6的三种过渡技术：
1.双协议栈：	节点同时启用V4/6协议栈（该用哪个用哪个）
2.隧道技术：	V6封装于V4（V4作为承载协议）
3.地址/协议转换：NAT-PT

隧道技术分类：
手动隧道技术：				//手动隧道技术比自动隧道简单
1.IPv6-over-IPv4 GRE
2.IPv6手动隧道
自动隧道技术：
1.IPV4兼容IPV6自动隧道
2.6to4隧道
3.ISATAP隧道
4.6PE隧道

思科设备格式：
手动隧道环境：	路由器A：IPV6----IPV4----IPV6：路由器B
           	       1.1.1.1- - - - - -2.2.2.2
路由器A中：
interface ethernet 0			//公网口
ip address 1.1.1.1 255.255.255.0	//公网地址
interface ethernet 1			//内网口
ipv6 address 2001::1/64			//内网地址
interface tunnel 0			//隧道口
ipv6 address 2006::1/64			//隧道地址（RB与RA隧道地址需相同链路）
tunnel source 1.1.1.1			//起始地址（本地公网IPV4地址）
tunnel destination 2.2.2.2		//结束地址（目标公网IPV4地址）
tunnel mode ipv6ip			//隧道模式为：ipv6ip（V6IPv6-over-IPv4V4）
-----------------------------------------------------------------------------------------
虚拟路由器冗余协议VRRP：基于接口的网关级冗余协议（组播：224.0.0.18，协议号112）

概念：
1.将承担网关功能的若干路由器加到虚拟组形成虚拟路由器来承担网关功能，提高可靠性
2.每个组使用相同的虚拟IP/MAC，每个VRRP组有自己的优先级且越高越好（默认属于抢占模式）高为主/低为备
3.多虚拟组同时承担业务形成多台虚拟路由器从而共同分担内/外网流量
4.只要组中至少有一台设备可工作则虚拟路由器仍正常工作
5.主周期性发送VRRP通告报文给备份组内其他路由器告知工作正常，若主挂掉则备路由器承担网关任务
6.备路由器启动定时器等待通告报文到来，若超时仍未收到主路由器的通告则认为其已无法工作；此时备路由器认为自己是主并对外发送VRRP通告（备路由器等待3倍超时时间）

两种工作模式：
1.非抢占方式：	备即使随后配置更高优先级也不会成为Master路由器（只要主设备没故障）
2.抢占方式：	一旦自己优先级比当前主路由器优先级高就会对外发送VRRP通告报文（导致备份路由器重新选举Master路由器）

华三设备格式：
0/0]vrrp vrid 组号 virtual-ip 192.168.1.254		//创建虚拟组和其承担的虚拟网关IP（相同组中设备此IP相同）
0/0]vrrp vrid 组号 priority 120				//抢占时的优先级（1～254）
0/0]vrrp vrid 组号 authentication-mode md5 123		//报文验证（需两端密码一致，明/密文2种验证）
0/0]vrrp vrid 组号 timer advertise 10			//报文通告间隔
0/0]vrrp vrid 组号 track interface Ethernet 0/0/1 reduced 30 //监视上联链路up/Down而自动降低相应优先级让位
-----------------------------------------------------------------------------------------
虚拟专用网：PVLAN
用于企业内部网，防止连接到某些接口或接口组的网络设备间的通信但允许与网关通信，在使用同1网段且在1个VLAN内的环境中划分出多个单独的VLAN，其中不同的Pvlan“单独VLAN”需经过网关通信

特点：
1.提高安全性
2.节省子网数
3.提高IP利用率（注：链路聚合口不支持PVLAN）

分类：
1.主VLAN：
2.辅VLAN：（团体/隔离）相同团体VLAN间可直接通信而不同团体间通信需经过网关，隔离VLAN仅与上层通信

交换机PVLAN中物理端口三种类型：
1.混杂端口：	可与所有设备通信
2.isolated：	隔离端口
3.community：	团体端口
-----------------------------------------------------------------------------------------
生成树STP：
为克服冗余网络的环路问题而设计，其始终根据BPDU进行一系列角色定位和端口处理以达到无环的目的（BPDU：桥协议数据单元），最终将环路网络结构修剪成无环的树型结构来防止环路（配置重点在于修改优先级）
二层冗余带来的问题：
1.广播风暴
2.多帧复制
3.MAC表不稳定

BPDU分为两类：
1.配置BPDU：用于将拓扑变为树行结构
2.TCN BPDU：当拓扑变化时通知其他交换机刷新其MAC表（因拓扑变更后PC与端口映射关系将改变所以要刷新MAC表）

BPDU报文字段：
协议		协议类型（BPDU=0）
版本		802.1D为：0
类型		配置BPDU：0x00/TCN为：0x80
根桥ID：		由根桥优先级/根桥MAC组成
根路径开销：	到根桥的开销（路径Cost）
指定桥ID：	桥的优先级/MAC地址组成（优先级默认32768，使用4096倍数，小的成为根桥）
指定端口ID：	端口优先级和端口编号组成
Message Age：	配置消息在网络中传播的生存期
Max Age：	BPDU在设备中的最大存活期（默认20s，20s后没收到RP发来的BPDU则开始改变端口角色进入Listening状态）
Hello Time：	BPDU的发送周期（默认2s，若对方10次没收到此报文则Max age过期）
Forward Delay：	端口状态迁移的延时，即转发状态延迟（默认15s）

生成树关键概念：
根桥：		生成树的根，根桥会根据网络拓扑的变化而变化，因此根桥并不是固定的（可修改优先级强制指定）
根端口RP：	非根桥设备上离根桥最近的端口（负责与根桥通信）非根桥设备只有一个RP
指定桥：		与本机直连来负责向本机转发BPDU的设备
指定端口DP：	负责下联交换机，其下联的设备用自己的RP与其连接（负责向下联交换机转发配置消息）
根路径开销：	每个非根交换机用其计算到达根的最短路径（根据带宽不同Cost值也不同，它是BPDU的沿路入接口Cost累加）

端口状态：	（阻塞到转发：50s）
1.Forwarding	转发流量的状态（仅RP/DP）
2.Learning	学习MAC地址（收到用户帧则填充自己MAC地址表，耗时15s）
3.Listening	根桥、根端口、指定端口的选择在此该状态完成（20s）
4.Blocking	阻塞口；仅接收BPDU（它是个屌丝：等待15s若收不到BPDU将进入Learning状态）
5.Disabled	阻断或物理关闭

生成树四个思路：
1.选出根桥：		最低的根桥ID（修改桥优先级来指定根桥，root ID由优先级/背板MAC组成）
2.各非根桥选出根端口RP：	到根的最低路径成本（沿路BPDU的cost累加）
3.各非根桥每个段选出DP：	根据其所有端口连接的最低的发送者桥ID （桥优先级/背板MAC，默认32768）
4.阻塞非指定的端口：	最低发送者端口ID

配置可归纳为三步：
1.选择根
2.选择RP（根端口）
3.选择DP（指定端口）

注：
初始化时所有设备都以为自己是根而生成各自配置BPDU并周期性向外发送，但只有RP/DP在转发用户流量
根桥所有端口都是DP。拓扑稳定后只有根桥向外发送配置BPDU（2S/次）其它设备对其进行了解和转发
STP的BPDU使用组播，目的MAC：01-80-c2-00-00-00，端口优先级是可配置的，在IOS系统设备上端口优先级默认128（0～255）
-----------------------------------------------------------------------------------------
快速生成树RSTP： 802.1W
RSTP在STP基础上改进以实现快速收敛，快速体现在端口进入转发状态的时间（其兼容STP）其在拓扑中根据不同VLAN来配置不同主/次根，RSTP只有3种端口状态：阻塞|学习|转发，但增加了端口角色：替代口/备份口

RSTP快速收敛前提：
替代口：RP的替代口，根端口挂掉时其开始工作
备份口：DP的备份口，若两个端口都连接到1个共享介质则其时刻准备着替代此介质中的DP

边缘/非边缘端口：
非边缘端口：只有非边缘端口变为转发状态时才产生拓扑改变并发送TCN BPDU（其他交换机收到时机立即清除MAC表）
边缘端口：  连接终端设备，其可立即进入转发状态（当边缘端口收到BPDU后自动变为非边缘端口参与RSTP运算）
-----------------------------------------------------------------------------------------
多生成树：MSTP 802.1S

MSTP与其他生成树区别：
1.STP/RSTP都是单树协议（1个vlan1颗树）
2.MSTP与RSTP的端口状态相同（阻塞|学习|转发）
3.MSTP基于实例（一个实例一棵树）多个实例相互实现负载分担（多VLAN一个实例可有效利用所有物理线路）
  MSTP的实例有IST/MST两种类型（IST用来兼容RSTP和STP）

MSTP配置思路：
1.相同域的交换机使用相同域名（一般都是单域，MSTP支持划分多个域）
2.配置修订级别（一般从0开始，用于MSTP间同步配置信息）
3.为VLAN映射实例后为每个实例设置主/次根
-----------------------------------------------------------------------------------------
生成树保护机制：
使用保护机制来提高生成树可靠性

1.边缘端口：	其连接终端（接口Up/Down不引起STP重运算但若收到BPDU则变为非边缘端口参与STP计算）
2.BPDU防护：	保护边缘口（当收到BPDU时启用一些保护机制如关闭端口而不是参与STP运算）
3.BPDU过滤：	其连接终端（不收/发BPDU）
4.根保护：	设在非边缘口的下联端口上（收到更优BPDU时立即变为侦听状态不在转发报文，相当于“断开”）
5.环路保护：	收不到BPDU时将自己阻塞（防止链路拥塞时错误的认为上联链路Down掉）

注：
当根保护端口不再收到更优的BPDU时端口经历STP各种状态以恢复到正常交换状态（防止根桥错误切换）
默认情况下RP的环路保护在所有交换机端口都禁用，环路保护不是阻断整个端口而是阻断有问题的VLAN
-----------------------------------------------------------------------------------------
路由策略：
全称Routing Policy，是为修改流量路径而调整路由信息的技术，主要通过改变路由属性（包括可达性）来实现策略的应用

路由策略主要应用：
1.控制路由的发布/接收
2.管理引入的路由
3.设置路由属性
4.BGP的设置等等...

路由策略的过滤器：
1.ACL/前缀列表				前缀列表比ACL精确
2.分发列表：Distribute-list		相同协议间采用此方式
3.路由映射表：Route-Map			配合其他工具使用（功能强大）
4.偏移列表：Offer-list			修改度量值（不过滤）
5.AS路径访问列表：as-path		仅用于BGP
6.团体属性列表：community-list		仅用于BGP
7.扩展团体属性列表：extcommunity-list	仅用于BGP
8.被动接口...
-----------------------------------------------------------------------------------------
路由映射表：Route-map
功能强大的路由策略工具，不但能过滤路由还能对路由属性修改如添加标签等，是为改变流量所经途径而修改路由信息的技术，在Route-map中一旦找到匹配条件时将不再继续匹配（匹配顺序自上而下）其Seq号用来指定匹配顺序（可增可减）删除时要特别小心，若输入no route-map name而没有指定序号则整个route map将被删除。Route-map缺省匹配动作为拒绝所有（deny any）因此建议在最后添加：Route-map 策略名 permit N+1而没有Match语句；来放行其他不被Route-map匹配的流量（若没有Match语句则匹配所有）

使用场合：
1.在路由引入时过滤（比distribute-list更灵活）
2.策略路由PBR
3.地址转换NAT
4.配合BGP路由策略的实现（BGP频繁用到Route-map用来控制路由接受和发布时的属性）

Match可匹配类型：接口|IP|下一跳|路由来源|度量值|标签|等等....
Set可设置的类型：下一跳|度量值|种子度量值|出接口|标签|等等....

思科设备格式：
#route-map 名字 permit 序号	//Permit|Deny是匹配/拒绝的条件，序号是匹配顺序（route-map缺省拒绝所有）
#match 	匹配条件			//若多行match/Set语句时相互之间是“and”关系
#Set 	设置动作			//路由映射表配置完成后还要设置其应用的位置

路由注入与路由映射表的结合：
fig)#router ospf 1
router)#redistribute rip route-map NAME 	//OSPF中注入RIP时使用策略
-----------------------------------------------------------------------------------------
策略路由：PBR
是依据用户制定的策略进行路由选择的机制（可使路由基于源地址进行转发）PBR实现策略路由需Route-map配合，通过合理应用PBR，路由器可以根据报文源地址/长度等信息灵活进行路由（注：PBR只能应用在IN方向）。一般来讲策略路由优先级要高于普通路由（即报文先按照策略路由进行转发）若无法匹配所有的策略路由条件再按普通路由进行转发，但对于配置了缺省出接口（下一跳）的情况则是先进行普通路由的转发，若无法匹配再进行策略路由转发

PBR功能：
1.Qos服务质量
2.负载分担
3.基于源IP的路由

配置步骤：
先使用route-map匹配好想要的流量再去接口中应用：ip policy route-map 策略名
-----------------------------------------------------------------------------------------
偏移列表：Offer-list
偏移列表与ACL相结合可对单个路由的Metric进行修改（仅适用距离矢量型路由协议）

思科设备格式：
fig)#access-list 1 permit 192.168.1.0 0.0.0.255	//匹配感兴趣路由条目
fig-router)#offset-list 1 out 2 Serial 0/0	//在DV型路由的进程中指定此出接口的路由条目的metric偏移（增量）
fig-router)#offset-list 2 in 10 ethernet 0	//对从以太网接口0获取的路由加入偏移量10
-----------------------------------------------------------------------------------------
分发列表：Distribute-list
用于过滤路由条目（控制路由传播与生成）通过其使得用户在决定允许/拒绝哪些路由的更新上具有灵活性，它通过配置访问列表（匹配感兴趣网段）将其应用于分发列表，可对路由更新进行控制而不管其来自何方

功能：
1.过滤某类路由报文或具体的路由明细
3.对LSDB计算出的路由信息进行过滤（因OSPF使用LSA进行交互所以仅能应用于in方向）

思科设备格式：
fig)#access-list 1 deny 172.16.0.0 0.0.0.255	//匹配要拒绝/允许的路由明细
fig)#access-list 1 permit any			//因ACL默认拒绝所有，此处放行其他所有路由
fig-router)#distribute-list 1 out se0/0		//在路由进程中指定分发列表out方向进行过滤
fig-router)#distribute-list 1 in se0/0		//在路由进程中指定分发列表in方向进行过滤
config)#access-list 3 permit 10.8.0.0 0.0.0.255	//匹配要拒绝/允许的路由明细
router)#distribute-list 3 out rip		//思考...

注：
因OSPF交互的是LSA非路由信息因此分发列表只能应用在OSPF本机的in方向且仅对自己有效（out方向不能过滤LSA信息）
对路由信息进行过滤的工具有二个（Route-map/Distribute-list）其中：在同种协议间过滤使用Distribute-list
在使用redistribute引入时使用可进行Route-map策略，在distribute-list的in/Out后不写接口则默认所有接口
-----------------------------------------------------------------------------------------
前缀列表：Prefix-list
可以比ACL更精确的匹配流量，其用来匹配前缀（网段）和前缀长度（子网掩码）可增量修改（sep），主要用于BGP

思科设备格式：
fig)#ip prefix-list # permit 1.2.3.0/24			//匹配网段1.2.3.0 （#表示序列号）
fig)#ip prefix-list # permit 0.0.0.0/0			//匹配默认路由
fig)#ip prefix-list # permit 0.0.0.0/0 le 32 		//仅0位需匹配且子网掩码<=32（相当于permit any）
fig)#ip prefix-list # permit 1.2.3.0/24 le 32		//1.2.3.0前24位必须匹配，此外子网掩码<=32
fig)#ip prefix-list # permit 10.0.0.0/8 ge 21 le 29	//网段10.0.0.0前8位严格匹配且掩码在21～29间
fig)#ip prefix-list # permit 128.0.0.0/2 ge 16 le 16	//匹配B类地址
-----------------------------------------------------------------------------------------
数据安全四要素：
1.机密性：	对称/非对称加密（非对称加密可防止中间人）
2.完整性：	摘要算法，如哈希函数的MD5/SHA1（防止数据篡改）	
3.身份验证：	数字签名/数字证书：与谁沟通以及是否有权沟通（身份验证是安全四要素前提条件）
4.不可抵赖：	数字签名（是否本人发出和收到信息）

组合加解密技术：
因使用对称加密时其密钥在网络中传输；为密钥的安全而使用非对称加密方式将对称加密的密钥进行加密，因此在网上传输的仅是非对称算法的公钥而真正用于解密的密钥不会泄露（若要求较高时可使用组合加解密技术）

组合加解密（加密）：
↓用对称加密进行大批量数据加密（每次加密产生一个新的随机密钥即：会话密钥）
↓用非对称加密的公钥加密之前随机产生的会话密钥后再将加密后的会话密钥发出
组合加解密（解密）：
↓用非对称加密算法的私钥还原出对称加密算法的会话密钥
↓用解出的对称加密的会话密钥对数据解密得到原始的数据

摘要算法：
HASH函数对将数据计算后的到的摘要（定长伪随机数）添加到通信的数据报中用于校验（MD5/SHA1即摘要算法）

摘要算法：（HMAC）
HMAC比HASH摘要复杂；其在用HASH函数计算数据摘要前添加MAC密钥参与摘要的运算得出摘要值，接收方使用原始数据和MAC密钥进行相同的操作（MAC密钥别人不知道）

数字签名：
是利用签名方的私钥对摘要值进行加密的一个过程的称呼，签名所得到的密文称为签名信息
功能：
1.保证信息完整性
2.身份认证
3.防交易抵赖

数字签名过程：
1.A要发送数据给B时；A使用哈希函数求出摘要值并用自己的私钥对摘要值进行加密后再发送（即数字签名）
2.B收到数据后先使用哈希函数求出数据摘要值再使用公钥将A的数字签名解密得到A计算的摘要后把两者比较
-----------------------------------------------------------------------------------------
不使用VPN来实现专用网功能可用PPP/帧中继但PPP/帧中继都需要专用的物理线路且不够灵活
VPN即封装/解封装的思想（封装后传输的路径称为隧道：Tunnel）使用VPN可互访各自内部网络并了解双方拓扑还可简化用户侧的配置/维护，总之隧道是虚拟的点到点连接，将一类协议封装于另一类协议中（封装内网数据后在公网传输，到对端在解封装）VPN在公网建立专用网络进行加密通讯（再企业网络中广泛应用，如IPsec over GRE），VPN网关通过对数据包的加密和目标地址的转换实现远程访问

VPN格式：[协议A][封装协议][协议B][载荷数据]
其中：
[协议A]：	是承载协议：最终实现在公网传输的协议（辅助在公网传输从而到达VPN网关）
[协议B]：	是载荷协议：被封装的协议（内部协议，如内网IP报文）
[封装协议]：	VPN的各种协议，如GRE
      
主要二层VPN技术：
1.L2TP
2.PPTP
3.MPLS L2 VPN

主要三层VPN技术：
1.GRE		不加密（IP协议号47）
2.IPSec		仅加密（需GRE配和）
3.BGP/MPLS-VPN

VPN网关使用的两个参数：
1.原始包目的IP
2.对端VPN的地址

常见的实现方式：
1.VPN服务器：	（大型局域网可在网络中心搭建VPN服务器实现）
2.软/硬件VPN
3.集成VPN：	（如路由器/防火墙等都集成VPN功能）

注：
二层VPN已很少用，三层的GRE/IPSec比较流行，是传统VPN（传统VPN由客户维护不由ISP控制）
因通讯是双向的，在进行VPN通讯时隧道两端的VPN网关需知道数据的目标地址和与其对应的远端VPN网关地址
BGP/MPLS-VPN由运营商维护（客户仅申请使用）。企业自己的内部网称为：intranet
-----------------------------------------------------------------------------------------“俄罗斯套娃”
通用路由封装：GRE
可将一类三层协议封装到另一任意三层协议中进行传输（在Tunnel两端分别对数据报进行封装/解封装来建立GRE隧道）在一种3层协议的网络上传送其他3层协议。若同一企业不同内网之间的路由协议需交换报文时可在其两端的公网出口之间建立GRE隧道实现路由协议的传输（tunnel口是“假口”其实际依托的是物理口）

格式：[帧头][3层协议A][GRE头][3层协议B][载荷数据]
其中：
[3层协议A]是承载协议：	承载协议使用协议号47表示上层GRE
[3层协议B]是载荷协议：	被传输的3层协议
[GRE头]是封装协议：   	GRE使用协议号“0x0800”表示载荷为IP

GRE隧道流程：
↓隧道起点路由查找
↓加GRE封装（添加公网IP报头）
↓承载协议负责其在公网路由并最终转发到对端GRE-VPN
↓解GRE封装（摘掉公网IP报头）
↓隧道终点路由查找

GRE优缺点：
优点：可用最普遍的IP网作为承载（支持多种协议）支持路由协议和组播且简单易部署
缺点：仅是点对点隧道且静态配置隧道参数，部署复杂连接关系时代价大，不加密传输且不能分隔地址空间

不能分隔地址空间概念：
当两端内网建立隧道成为逻辑上的内网时俩内网间网段不能重复（在一个地址空间中）

GRE中Tunnel口虚假状态：	
若GRE在公网间的链路Down掉、，此时GRE的Trunel口仍认为接口是up状态（由于使用静态路由，另一个备份的隧道始终是空闲状态，造成隧道不通，数据包被丢弃），解决：Tunnel口间定时发送Keeplive报文（一段时间收不到对方Keeplive消息则将此接口Down掉）

思科设备格式：
nfig)#interface tunnel 1			//创建tunnel口，编号为1
nfig-if)#source 10.1.1.1			//tunnel口的源地址  （隧道依托的实际物理出口IP）
nfig-if)#destination 202.1.1.2			//tunnel口的目的地址（对方处在外网的IP）
nfig-if)#ip address 20.2.2.2 255.0.0.0 		//tunnel口地址（是私网地址，与对方tunnel口同网段）

注：
在OSPF中使用network把隧道地址激活后才能交给GRE封装并路由（隧道使用前提是有去往对端内网路由）
GRE配置后要有路由条目指向隧道口IP才会在需要时使用此隧道（路由协议中通过GRE学习到的目的网段出口标识为“Tunnel”）
使用RIP协议时因步跳超过15将不可达而通过在网络中使用隧道可隐藏其部分跳数从而扩大网络工作范围
-----------------------------------------------------------------------------------------
协议安全性：IPSec
IPSec不能实现GRE的封装另一协议的功能但其重点在于加密所以IPsec常配合GRE使用来互相弥补各自不足，对于如路由协议，语音，视频等数据先用GRE封装后再对封装的报文进行IPsec加密（IPSec是网络层安全保障机制而不是一种协议）。Ipsec引入多种验证/加密算法和密钥管理机制，通过验证算法（AH结构内的算法）和加密算法（ESP结构内的算法）防止数据遭受篡改和窃听等安全威胁

IPSec缺点：
1.配置复杂且不支持组播
2.消耗运算资源而增加延迟
3.不支持路由协议（可用GRE配合）

IPSecVPN：是利用IPSec隧道实现的三层VPN
功能：
1.访问控制
2.机密性/完整性（AH/ESP）
3.数据来源认证（ESP）
4.防重播报文

IPSec两种模式：
1.传输模式：端到端保护（在内网中亦加密，仅保护IP包的载荷数据）
2.隧道模式：站点到站点保护，起始于网络出口/结束于网络入口（在内网中不加密，隧道模式对整个原始包进行保护）

传输模式：
1.验证协议AH：	[IP]【AH][数据】
2.加密协议ESP：	[IP]【ESP头][加密数据][ESP尾][ESP验证】
隧道模式：
1.验证协议AH：	[新IP头]【AH][原IP头][数据】
2.加密协议ESP：	[新IP头]【ESP头][原IP头][加密数据][ESP尾][ESP验证】
		（只有隧道模式才生成新的IP报头，因传输模式没有生成新的IP头所以不能出公网）

IPSec两个安全协议：	
1.AH：	报文验证头协议，仅对数据验证，IP协议号51（MD5/SHA1）
2.ESP：	封装安全载荷协议，对数据验证和加密，IP协议号50（DES/3DES/AES）
	（AH/ESP可同时用，一般只用ESP）

密钥管理机制：
1.手工配置密钥（复杂）
2.使用IKE协议自动协商（IKE封装于UDP：500）

IPSec术语：
SA： 安全联盟（IPSec中各类安全算法属于安全联盟的集合，由：SPI|目的IP|安全协议标识符，三元组唯一标识）
     决定了对报文如何处理（处理内容：协议/算法/密钥）每个IPSec都是单向的（但网络中数据通信都是双向的）
SPD：安全策略数据库
SAD：安全联盟数据库

IKE与IPSec的联系：
IKE来为IPSec提供自动协商交换密钥（建立SA“安全联盟”服务）而IPSec的安全协议（AH/ESP）负责提供实际的安全服务（AH/ESP在IKE协商阶段完成后进行安全服务）

IKE功能：（IKE的密钥管理协议：ISAKMP）
1.为IPSec自动协商来交换密钥，建立安全联盟的服务（降低手工部署的复杂度）
2.使用Diffie-Hellman（DH算法）在不安全的网络上安全地分发密钥/验证身份（类似CHAP的思想，其传输的不是密钥信息）
3.定时进行SA和密钥的更新实现完善的前向安全性
4.为IPSec提供抗重播服务

IKE两个阶段：
阶段一：
在网络上建立IKE SA为阶段2提供保护（为后期安全交换密钥服务）双方使用DH算法计算公钥（DH使双方计算公钥而不直接在网上传输）
两种模式：
  1.主模式：  （策略协商--DH交换--ID交换及身份验证）
  2.野蛮模式：（用的少）
阶段二：
在阶段1的IKE SA保护下协商出互相匹配的安全提议（如使用何种安全协议/验证算法。加密算法和链路模式等）

IPSec配置准备：
1.选择保护的数据：匹配感兴趣流
2.用哪个保护路径：选择加密的出口
3.用哪种安全保护：AH/ESP
4.安全保护的强度：选择何种安全程度
IPSec配置任务：
↓配置安全ACL：			匹配感兴趣流
↓配置ISKAMP Policy：		阶段1 使用IKE策略解决公钥的问题
↓配置IPSec transform set：	阶段2 使用IPSec策略解决加密问题
↓配置Cryopt map映射：		使用map将前3步结合
↓在接口上应用安全策略：		应用map

IPSec建立过程：
环境：HostA --[RA]------Internet------[RB]-- HostB
步骤：
↓HostA开始向HostB发送数据
↓RA/B通过IKE的阶段1来协商（完成对公钥保护: IKE SA）
↓RA/B通过IKE的阶段2来协商（完成对数据保护: IPSec SA）
↓RA/B在隧道中进行数据交换

思科设备格式：
环境：HostA --[RA]------Internet------[RB]-- HostB
nfig)#access-list 110 permit ip 10.1.1.0 0.0.0.255 10.1.2.0 0.0.0.255	 //配置流量

nfig)#crypto isakmp policy 1 		//设置IKE策略，策略名是1，进行公钥的协商
      authentication pre-share		//验证用pre-share（域共享形式密钥验证）
      hash sha				//摘要算法：SHA
      encryption aes 128		//加密算法：AES，长度128bit
      group 2				//密钥交换使用DH算法的第2组
nfig)#crypto isakmp key 6 cccc address 172.16.171.20 
		       (0/6是否加密)	//设置IKE协商时对方公网IP，域共享密钥的密码是cccc
nfig)#crypto ipsec transform-set abc	//设置Ipsec中数据的加密方式，abc是其策略名
      esp-aes esp-sha-hmac		//使用ESP的AES加密并使用SHA的HMAC摘要（RA/B一致）
nfig)#crypto map SSS 10 ipsec-iskamp	//创建MAP名字：SSS 序列号：10 映射关系是ipsec-iskamp（自动协商IKE）
      set peer 172.16.171.20		//对端IPSec的地址
      match address 101			//匹配ACL列表110
      set transform-set abc		//匹配ACL用IPSec策略abc
nfig-if)#crypto map SSS			//接口中应用（要有去往对端的路由）
-----------------------------------------------------------------------------------------
IPsec over GRE
原始IP包被封装在GRE隧道封装包中并且GRE隧道封装包又被封装到IPSec隧道封装包中（IPSec使用ACL匹配加密流量时匹配的是GRE封装后添加的公网IP而不是内网IP也不是隧道口的IP）

思科设备格式：
私网A ----------[RA]隧道-----------Internet-----------隧道[RB]----------私网B
10.1.1.1/24     物理：192.13.2.1/24		      物理：132.108.5.2/24 10.1.3.1/24  
		隧道：10.1.2.1/24- - - - - - - - - - -隧道：10.1.2.2/24

nfig）#interface tunnel 0
nfig-if）#ip address 10.1.2.1 255.255.255.0
nfig-if）#soure 192.13.2.1
nfig-if）#destination 132.108.5.2
nfig）#access-list 101 permit ip source 192.13.2.1 0.0.0.0 destination 132.108.5.2 0.0.0.0	
nfig）#crypto isakmp policy 1
nfig-policy）#authentication pre-shared
nfig-policy）#hash sha
nfig-policy）#encryption aes 123
nfig）#crypto isakmp key cisco address 132.108.5.2
nfig）#crypto ipsec transform-set ccna
nfig-tran）#esp-aes 128 esp-sha-hmac
nfig）#crypto map RTATOTRB ipsec-isakmp
nfig-map）#set peer 132.108.5.2
nfig-map）#match address 101
nfig-map）#set transform-set ccna
nfig）#interface s1/0
nfig-if）#ip address 192.13.2.1 255.255.255.0
nfig-if）#crypto map RTATOTRB
-----------------------------------------------------------------------------------------
安全缓冲区：DMZ
为解决安装防火墙后外部网络用户不能访问内部网络服务器的问题而设立的一个非安全系统与安全系统间的缓冲区；该缓冲区位于企业内网和外网之间的小网络区域内，在其中可以放置必须公开的服务器如企业Web/FTP服务器和论坛等，通过这个DMZ区域可更有效地保护内网，因为这种网络部署比起一般的防火墙方案对来自外网的攻击者来说又多了一道关卡

概念：
DMZ能提供对外部入侵的防护但不能提供其内部破坏的防护（如内部进行的数据通信分析/欺骗）将部分用于提供对外服务的服务器划分到一个特定的子网（DMZ内），在DMZ的主机能与同处DMZ内的主机和外部网络的主机通信，而同内部网络主机的通信会被受到限制，这使DMZ的主机能被内/外部网所访问且内网可防止被外网所得知
-----------------------------------------------------------------------------------------
端口镜像：
支持交换机和路由器；将一个或多个端口流量转发到指定口实现监听（指定口又称镜像口或目的口）在不严重影响源端口正常吞吐情况下可通过镜像端口对网络流量监控分析；在网络故障时快速定位故障。监控口一般直接与监控主机相连并监视in/out方向所有数据以供安装监控软件的管理服务器抓取数据（既可实现同一VLAN内的若干源端口向一个监控端口镜像也可从若干VLAN向一个监控端口镜像）当端口配成目的端口后将不能再成为源端口，冗余链路端口也不能成为目的端口！若Trunk端口配成目的端口则其Trunk功能停止！

根据端口模式分三种类型：
1.入口镜像：对in方向流量镜像
2.出口镜像：对out方向流量镜像
3.双向镜像：双向流量镜像

根据镜像功能分两种类型：
1.流镜像：若端口启用ACL则认为是流镜像（采集过滤后的数据，否则认为是纯端口镜像，支持in/out和双向）
2.纯端口镜像：对端口in/out流量进行镜像

根据镜像工作范围：
1.本地镜像：源/目的端口在同一设备
2.远端镜像：源/目的端口在不同设备（镜像流经某种封装实现跨路由器传输）
-----------------------------------------------------------------------------------------
多协议标签交换：MPLS
链路层TYPE用0x8847表示其承载是MPLS，MPLS位于2/3层之间！将三层路由技术/二层交换技术相结合而充分发挥路由灵活性与二层交换简捷性（一般的网络不支持MPLS，这样的网络称为非MPLS网络）因路由器的IP转发采用最长匹配需多次查表因而效率低，MPLS使用短而定长的标签来封装网络层分组从而让交换机或路由器根据标签值进行报文转发（一次查表效率高）MPLS中的多协议指的是可承载于各种链路层协议上（如PPP|ATM|帧中继|以太网等）原理上各种三层报文也可承载（封装入）在MPLS之上（如IPV4/V6），MPLS支持多层标签和面向连接的特点，使其在VPN，流量工程，Qos等方面广泛应用并具有良好拓展性

LSR与LER：
MPLS网络由多台经升级后可支持MPLS的路由器组成（这些路由器被称为LSR/LER）
1.LSR：Lable Switching router		处于MPLS网络核心的SW或ROUTER，处于MPLS网络内部（提供标签交换/分发功能）
2.LER：Lable Switching Edage router	处于MPLS网络边缘的路由器，报文于LER进入/离开（提供标签映射/分发/移除功能）

MPLS网与非MPLS网可兼容，报文在MPLS网络与非MPLS网络间平滑过渡：
[非MPLS网]----[LER]----[LSR]----[LER]----[非MPLS网]

FEC与LSP：
FEC：转发等价类，是在转发过程中以等价方式处理的一组数据分组；可通过地址/隧道/Qos等标识创建FEC
     MPLS把相同的转发处理方式归为一个类（即LER将相同目标地址的一类映射为1个标签来进行相同的处理方式）像是一股数据流
LSP：标签交换通道，一个FEC数据流在不同节点被赋予不同的标签，数据转发按照这些标签进行
     转发等价类“FEC”在网络中所经过的（最短）路径即被称为LSP（标签交换的路径）

MPLS标签概念：
标签：	短而定长（是只有局部意义的标识）标签通常位于报文的链路层封装头和网络层封装头之间（MPLS为2.5层协议） 
	路由器根据标签决定如何转发报文，而不是按照IP报文头来转发

MPLS标签位置：[帧][MPLS标签][IP头][数据]
MPLS标签结构：[Lable][Exp][S][TTL] （4字节共32bit）
1.Lable： 标签的值，20bit，是标签转发表的关键索引（MPLS中最重要的字段）
2.Exp：	  用于Qos，3bit（即MPLS中服务质量的值）
3.S：	  栈底标识，1bit，若多个标签进行嵌套时将其最后面标签的S置1（同理仅有一个lable时S位也置1）
4.TTL：	  生存周期，8bit，用于防环（MPLS的TTL从IP的TTL拷贝得来，每一次Lable交换时其外层Lable的TTL均减1）

标签S字段含义：
通过MPLS标签的S值可实现多层MPLS的标签嵌套
例子：[帧][标签,S=0][标签,S=0][标签,S=1][IP头][数据]
				   *S位置1时是最后一个标签

标签分配协议：
路由表由路由协议建立同样MPLS标签表也要用一种协议建立即标签分配协议：用于在LSR之间分配标签来建立LSP（标签交换的路径），MPLS标签的分配协议相当于传统网络中的路由协议，LDP因其实现简单且可靠而逐渐成为MPLS网络应用最广泛的标签分配协议
标签分配协议分类：
1.LDP（广泛使用，标签分配协议：Label Distribution Protocol）
2.CR-LDP
3.RSVP-TE
4.MP-BGP
5.MP-BGP（BGP4+）

LDP的消息类型：	（大致分4种，实际很多）
1.发现消息：	LDP邻居间的发现和维持（相当于Hello包）
2.会话消息： 	LDP邻居间会话的建立/维持/中止
3.通告消息：	向LDP邻居宣告标签、地址等信息（相当于传统网络中交换各自路由报文）
4.通知消息：	向LDP邻居通知事件或错误

LDP会话的建立和维护：
环境：[RA]------------[RB]
↓邻居发现：	互发Hello消息（使用UDP:646，组播:224.0.0.2）
↓建立TCP连接：	建立TCP连接（地址大的一方主动发起，使用TCP:646）
↓建立会话：	会话初始化 ，由Master发出初始化消息并携带协商参数
		Slave检查参数能否接受： 若能则发送初始化消息并携带协商参数并随后发送Keepalive消息给对方
		Master检查参数能否接受：若能则发送Keepalive消息（双方收到Keepalive消息时会话建立）
↓维护会话：	期间收到任何差错消息均关闭会话并断开TCP连接
		注：LDP使用组播:224.0.0.2，仅在发送Hello包时使用UDP：646而建立连接则使用TCP：646

MPLS中上/下游概念：
在MPLS中是下游为上游分配标签（因下游最先知道它的IP地址并建立了标签与IP的映射关系）

标签的分配过程：
LDP的会话建立后路由器根据路由表进行标签分配从而形成MPLS标签转发表，标签转发表主要包含入标签IN、出标签OUT和出接口NEXT-HOP，路由器根据标签转发表转发MPLS报文（标签是设备随机自动生成的，其中16以下系统保留）

LDP使用224.0.0.2 邻居发现UDP:646--->建立连接TCP:646--->建立会话:keeplive（m/s）--->维护会话
------------------------------------------------------------------------------------------------
	  终端PCA-----[目的地址][下一跳]-----[目的地址][下一跳]-----[目的地址][下一跳]-----终端PCB
路由表中：10.0.0.1    20.0.0.1/24：S0/1      20.0.0.1/24：S1/1     20.0.0.1/24：e0/0     20.0.0.1
	  		 |			 |			 |
标签转发：	      [in][out][下一跳]	    [in][out][下一跳]	   [in][out][下一跳]
		      null  36   S0/1        36   3    S1/1	    3   null e0/0
------------------------------------------------------------------------------------------------
LDP默认DU模式分配标签：会话建立后主动向上游LSR发送标签映射信息

MPLS标签分配模式：（即标签从哪里得来）
1.DOD：	下游按需标记分配：Downstream-on-demand
	上游LSR需要去往20.1而没有其标签于是请求20.1的标签（包含FEC的描述信息，FEC：转发等价类）
	下游LSR知道20.1，其收到标签请求后回应其标签给上游（为此FEC分配标签并将分配的标签通过标签映射消息反馈给上游LSR）
2.DU：	下游自主标记分配：Downstream unsolicited（最常用）
	下游LSR在LDP会话建立成功后主动向其上游LSR发布标签映射消息（不用等待上游的请求消息）

MPLS标签控制模式：
1.有序方式：	上游设备只有收到其下游返回的标签映射消息（DOD/DU）后才向自己的更上游发送标签映射消息
2.独立方式：	不论有没有收到其下游返回的标签映射消息，都立即向其上游发送标签映射消息（代替下游设备职能，接替下游进行映射）
		缺点：若下游设备没有此标签的网段，其收到后就扔掉了

标签的保持方式：
环境：ABC三个路由器互相连接形成三角形，B把自己的PC告知A，C再把把B告知的PC告知A
1.保守模式：	只保留来自下一跳邻居的标签而丢弃所有非下一跳邻居发来的标签
		优点：节省内存和标签空间
		缺点：当IP路由收敛、下一跳改变时LSP收敛慢
2.自用模式：	保留来自邻居的所有标签
		优点：当IP路由收敛、下一跳改变时减少了LSP收敛时间
		缺点：需更多内存和标签空间
注：
所有网络设备默认都是DU方式（下游主动分配）+自用模式（保留非下一跳）+有序方式（从下游学来后再交给上游）

MPLS转发原理：
环境：[非MPLS网]----[LER]----[LSR]----[LER]----[非MPLS网]
1.标签PUSH：	报文进入MPLS网络，LER发现其目的IP有与自己关联的路由转发表项时进行压标签（PUSH）操作（封装标签）
2.标签SWAP：	报文在MPLS网络间转发时在LSR设备上进行标签交换（SWAP）设备只需查询标签转发表即可完成转发
3.标签POP：	报文在转出MPLS网络时LER设备发现自己是该LSP的最下游设备则进行弹出标签（POP）操作

MPLS实际应用：
随着硬件技术的进步采用ASIC芯片和NP（多核心；路由器使用）进行转发的高速路由器和三层交换机得到广泛应用，使IP转发性能提高从而可满足网络数据转发性能需求因此MPLS在提高转发性能上未发挥其优势，但MPLS支持多层标签嵌套和面向连接的特点使得其在VPN、流量工程（TE）、QoS等方面广泛应用。因MPLS只看标签因此也有隧道功能
-----------------------------------
MPLS-VPN：
有更合理的结构模型，简单的维护需要和灵活的业务控制方法解决了传统VPN及技术的一系列问题，成为应用广泛的VPN技术之一

当企业在公网有若干分部时搭建传统VPN连接的话关系将变得更复杂
传统VPN的缺陷：
1.静态隧道可拓展性不强，传统VPN技术的隧道需静态建立（随着规模扩大VPN隧道数量呈N^2增长）
2.VPN的维护/管理需由用户完成，因不同的VPN用户造成私网地址可能冲突所以负责维护公网的ISP因不能区分而无法管理用户的VPN
  因此传统VPN无法适应大规模VPN网络应用，需一种新型的VPN技术解决上述问题（即MPLS-VPN）

MPLS-VPN优点：
1.实现隧道的动态建立（依靠MPLS中LDP协议）
2.解决两端本地IP冲突问题
3.VPN私网路由易于控制（有灵活控制方式）

MPLS标签原理：
隧道中间的LSR直接根据MPLS标签转发表进行数据转发而不需查询路由表也不许学习到私网用户的路由（只要在进出MPLS网络的LER设备上进行处理，私网数据就能穿越公网）

MPLS-VPN
由于ISP仅学习公网路由因此不知道企业的私网信息所以MPLS-VPN不能将两端私网标签传输，但只要下游的LER设法知道本私网数据的目的LER就可以将数据封装到该LER的MPLS隧道中去
如：
在两端LER上宣告自己的loopback口在公网，数据到达上游的LER（隧道出口）后，LER检查报文标签发现是发给自己的（下一跳是自己的loopback口）再进一步解析标签内部IP头发现真正的目的地址从而查询路由表成功转发报文给私网用户（以上即MPLS-VPN核心思想）

MPLS倒数第二跳：
既然报文在下游的LER（隧道出口）茶碗标签后还要根据IP头再进行转发，不如在倒数第二个设备上（LER前面的LSR）直接弹出标签

传统VPN维护方案：
隧道之起点/重点即：CE/PE ；其建立和维护工作完全由VPN用户完成（没ISP的事）
环境：[CE]----([PE]---[P]---[PE])----[CE]
CE：直接与ISP相连的用户设备
PE：ISP中与CE相连的路由器（主要负责VPN业务接入）
P： ISP在公网的核心路由器（负责路由和快速转发）
---------------------------------------------
多VRF技术：（虚拟路由转发）
环境：（VPN1/2/3/4使用了相同的私网地址）

	VPN1[CE]---\s1		   s1/---[CE]VPN3
		  ([PE1]---[P]---[PE2])
      	VPN2[CE]---/s2		   s2\---[CE]VPN4

MPLS-VPN解决方案：
将同一网络位置的不同用户采用一台设备进行接入并在接入的不同设备间共用隧道，然而不同的VPN用户肯呢个选用相同的私网地址空间，PE设备上将存在地址冲突（多VRF技术即用来解决同一设备上的地址冲突问题）使用VRF将一台路由器划分成多个VRF（逻辑上成为多个路由器），每个VRF之间互相独立，互补可见，拥有独立的路由表项，端口，路由协议等...
思路：
PE1的S1绑定VPN1，从S1进入的报文去查询VPN1的路由表进行转发（同理右侧方式相同）并启用OSPF实例在VPN1上
PE1的S2绑定VPN2，从S2进入的报文去查询VPN2的路由表进行转发（同理右侧方式相同）并启用OSPF实例在VPN2上
-----------------------------------------------------------------------------------------
边界网关协议：BGP
不同AS（或称路由域）间的路由交换与管理的需求推动了EGP发展但EGP设计简单而被BGP取代。BGP是AS间的动态路由协议（边界网关协议）其在众多AS间对路由信息进行管理（IGP把路由器作为单位运算，BGP把AS作为单位运算：BGP下一跳是AS）BGP在众多AS间传递路由表并管理

BGP概念：
1.是AS外部路由协议，在AS间传递路由信息而没有路由学习功能（仅传递）
2.是距离矢量型协议（DV）与其他DV协议不点是它从设计上避免了环路发生
3.用TCP:179单播发送
4.支持CIDR/路由聚合（BGP即是有类也是无类协议）
5.为路由附加丰富属性
6.只发送增量路由更新（触发更新）
7.路由过滤和路由策略

IGP/BGP的区别：
IGP：是AS内协议，互联对象是路由器，提供路由器到路由器间的路由
BGP：是AS间协议，互联对象是众多AS，提供自制系统到自制系统间的路由

自制系统与BGP：
自制系统即AS（是众多使用统一协议并统一管理的路由器）它们使用相同IGP协议和统一的度量方式在AS内进行路由并使用外部网关协议将分组路由到其他AS，BGP用于连接自制系统，提供AS-AS间的路由（或称IGP到IGP间的路由）
BGP数据库：
1.邻居表：	邻居的列表（BGP的邻居不一定直连；其指定目标邻居地址并用TCP连接）BGP建立邻居关系后才交互信息
2.转发数据库： 	从邻居收到的所有网络；包含到达网络的多条路径和路径的各种属性
3.路由选择表：	到达网络的最优路径；从转发数据库中计算出的最优路径

BGP基本术语：
1.BGP发言者：发送BGP消息的路由器称为BGP发言者（启用BGP的路由器即BGP发言者，其邻居关系需手工指定）
2.BGP对等体：交换BGP消息的发言者相互间的关系称为对等体（即BGP Peer）

BGP的对等体：
EBGP：不同AS间直连的BGP间的邻居关系称为EBGP对等体，BGP发言者从EBGP获得的路由会向所有对等体（EBGP/IBGP）通告
IBGP：同一AS内BGP间的邻居关系称为IBGP对等体，BGP从IBGP对等体获得的路由不再向其它IBGP对等体发布（内部收到不再给内部）
      注：BGP从IBGP获得的路由是否发给其EBGP对等体根据BGP是否同步有关（同步默认开启但原则上建议关闭）

BGP防环方式：
1.AS之间防环：	因BGP是把AS作为基本单位所以BGP发言者将本地的路由信息传递时加入AS标识且在AS间传递时进行累加
		每个AS的BGP路由器都会将此AS标记进行分析从而防环
		如[1.0网段][经AS1][经AS2][经AS4][经AS3][经AS5]（将沿途所有AS累加从而用记录的AS号识别是否形成环路）
2.AS内部防环：	从IBGP获得的路由不再向其它的IBGP对等体发布（内部收到不再给内部；水平分割思想）
		如：环境：RA--（RB--RC--RD）--RE	（括号是AS内部）
		困扰：因从内部收到不再向内部发送所以B告知C关于EBGP-RA的路由后C不告知D，因此D不知也不会告知RE
		解决：直接在RB/D间建立邻居关系从而让RB直接告诉RD（RC在其中起到中转作用）

对等体概念总结：
1.从EBGP对等体获得的路由会向其所有对等体通告（不论EBGP或IBGP）
2.从IBGP获得的路由将不再向IBGP对等体发布（水平分割）
3.从IBGP获得的路由是否发布给它的EBGP对等体与BGP是否同步有关（默认开启，需关闭）
4.关闭同步后IBGP路由被直接发布给EBGP，开启同步时该IBGP路由只有在IGP也学到了这条路由时才会发布给EBGP
5.BGP只把自己路由表中最优路由发给所有对等体（最优和有效路由在BGP路由表中标识为“*>”）
6.BGP间建立连接后发言者将把自己所有的BGP路由发布给新的对等体

BGP报文类型：
1.Open：		建立BGP对等体间的连接关系，相当于Hello包（BGP在使用TCP建立连接前先用UDP发送open消息）
2.Keepalive：	周期性向BGP对等体发出Keepalive消息以保持连接有效性（60S/次）
3.Update：	携带路由更新（删减、增加）类似OSPF的LSU
4.Notification：	检测到错误状态时向对等体发出Notification消息后BGP连接立即关闭

BGP邻居状态：	
↓Idle（空闲）：			路由器查看路由表以判断邻居是否可达
↓Connect（连接）：		路由器发现路由并完成TCP三次握手
↓Open sent（打开发送）：	发送BGP会话之间的连接参数（开始发送TCP的open包）
↓Open confirm（打开确认）：	双方对Open消息回应之后（路由器收到连接参数一致性确认）
↓Established（建立）：		邻居关系建立

BGP的路由处理流程：
↓从对等体接收BGP路由（接收时对路由进行过滤和属性设置）
↓尝试合并具体路由（汇总）
↓选出最佳路由“>”并装入路由表
↓将路由表中的路由交给IBGP/EBGP（发布时对路由进行过滤和属性设置）

BGP转发黑洞的产生：
环境：[RA]-----([RB]-----[RC]-----[RD])-----[RE]	  **B-C-D是AS-200，RA有网段8.0.0.0/24，RE去往RA的网段**
因RB/D是非直连邻居，中间RC的IGP没有去8网段的路由那么RD上去往8网段的数据会被丢弃
原因：	BGP路由器对等体告知了路由信息而IGP并不知道路由信息
措施：	BGP同步（即IBGP/IGP间路由信息的同步）开启后只有在IGP也知道这条IBGP路由时才会被发布给EBGP对等体（此措施不合理）
	因IGP需学习BGP中大量路由信息或其他原因所以同步功能要关闭（默认开启）关闭同步后IBGP路由直接被发布
-----------------------------------
BGP路由策略功能介绍：
1.依照路由IP过滤
2.依照所经AS-Path过滤
3.依照路由各种属性过滤
4.依照路由来源接口过滤
5.依照过滤结果设置路由属性

何种情况下可不需要BGP：
1.只有一个路由器连接到外网或一个AS
2.多个路由器连接到多个AS但不为其它AS传递流量
3.路由策略对你的AS不是特别重要
4.路由器内存和CPU的处理能力不足以处理大量BGP更新

思科设备格式：
nfig)#router bgp 100				//启用BGP（100是AS号）AS号是其所属AS（一个路由器只能配一个AS）
nfig-router)#no synchronization 		//关闭BGP同步！
nfig-router)#neighbor 1.1.1.1 remote-as 200	//指定邻居并用remote-as对方AS（前提是能通）此AS可判断是EBGP还是IBGP
						//remote-as用于辨别其邻居是IBGP/EBGP关系
nfig-router)#bgp router-id 1.1.1.1		//为此BGP指定Router-id，功能与OSPF类似（先建环回在确定Router-id）
nfig-router)#neighbor 1.1.1.1 shutdown		//管理性的关闭邻居关系（前加no则开启）
R#show ip bgp summary				//显示BGP的邻居表
R#show ip bgp					//显示BGP的转发数据库表
R#clear ip bgp *				//清空BGP邻居（硬重置，断开了TCP连接）


BGP中Router-id的使用：
BGP的RID是其loopback口（为使IBGP间能够通信，IGP协议需宣告它的loopback口地址使得BGP报文中使用的router-id目的地址能够被IGP路由）通过宣告的loopback（即RID）使对等体互相通信而非物理口，从而提高可靠性

建立IBGP：
router)#neighbor {IP|Router-ID}	
使用IP时若IP所在链路故障则邻居失效，使用Router-ID则不会（选路）建议邻居指RID。虽在IBGP中使用Loopback口创建RID并应用在邻居地址中较理想但因其发送报文时的源IP是本地的物理Out方向的IP因此两端BGP路由器间的源和目的不是对应关系（双方neighbor地址指向不同），所以不能建立起邻居关系，以上所述在BGP看来：若收到的Hello报文中neighbor地址是自己所指地址才能建立邻居（否则忽略）
措施：
router)#neighbor 1.1.1.1 remote-as 200			//先指定其邻居
router)#neighbor 1.1.1.1 update-source loopback 1	//强制指定Hello包中源IP使用loopback1的IP（使对方知道邻居发来）
							//因IBGP收敛慢需重置BGP：clear ip bgp *（硬重置；断开TCP连接）
BGP的Network发布： 
router)#network 1.1.1.0 mask 255.255.0.0 
其与IGP协议的network含义不同，此命令用于让BGP通告自身哪些网络（而IGP的network指的是在相应接口上启用协议）若不指定子网掩码则默认主类网络，它支持无类前缀，BGP可通告子网或超网因为BGP的network通告的是真正的的路由条目所以其network所宣告的路由和路由表中的网段和掩码必须相同（在通告前BGP会查看其路由表中是否有路由）

在BGP数据库表中：
*>：	有效“*”最优路由“>”
*i：	从IBGP收的有效路由（内部学来因此不是最优“>”）若路由条目用*i标识则其不会被告知对等体（因BGP只将最优路由发布）
*>i:	从IBGP收的最优有效路由（修改了next-hop）

next-hop-self：
因只有最优路由才被BGP添加到路由表，若不是最优路由则不会将其告知EBGP对等体因而其他AS的BGP将收不到路由
解决：
router)#neighbor 1.1.1.1 next-hop-self 	//强制让IBGP邻居从本BGP收到的路由中其下一跳设为本BGP，邻居路由表标识为“*>i”
因BGP下一跳是AS所以在AS内的IBGP间收到的信息其下一跳仍是本AS地址（AS内的BGP）相当于在AS内传递BGP信息时路由属性都没变
BGP中处于同一AS内且分别连接不同AS的BGP路由器需建立邻居关系（不经IBGP而避免水平分割）

BGP自制系统号：
公有：1～64511			
私有：64512～65535			//电信AS：4134，网通AS：9929（AS由IANA负责分配）
-----------------------------------
BGP属性概念：
与IGP协议不同，BGP着重点不在于计算/发现路由（没有学习路由的功能）其主要是通过丰富的属性和策略实现对路由的控制
BGP属性分类：
1.公认必遵（厂商要遵守）：		Origin属性，AS_PATH属性，NEXT_HOP属性（公认必遵存在于Update中）
2.公认可选（厂商可选择）：		LOCAL_PREE属性，ATOMIC_AGGREGATES属性
3.可选传递  （厂商可选择，在AS间）：	CONMMUNITY属性，AGGREGATE属性
4.可选非传递（厂商可选择，在AS间）:	MED属性，CLUSTER_LIST属性，ORIGINATOR_ID属性

BGP路径属性：
1.AS_PATH（公认必遵）
2.NEXT_HOP（公认必遵）
3.ORIGIN（公认必遵）
4.LOCAL PREFERENCE
5.MED
6.OTHERS

AS_PATH属性：
公认必遵，是路由到达目的地所经过的所有AS的有序列表，当BGP将路由通告到其他AS时便将自己的AS号添加在AS_PATH最前面
如AS_PATH属性中：[目的网段]【本AS号】[300][200][100]
注：
此属性用于防环和选择最小“跳数”通常BGP不接受AS_PATH中包含本地AS的路由从而避免形成路由环路，此属性也可用于路由的选择/过滤

NEXT_HOP属性：
公认必遵，为当前BGP发言者指示去往目的地址的下一跳IP（相当于路由条的目下一跳），其在AS内默认不改变，在AS间传递时被EBGP发言者更改此属性再发给其他AS的EBGP

ORIGIN属性：（起源属性）
公认必遵，定义路由信息来源；ORIGIN说明此路由是如何成为BGP路由的，在其他选路因素相同情况下BGP会比较ORINGIN属性来确定到达目的地的最佳路由：IGP优于EGP，EGP优于Incomplete
三种ORIGIN类型：
1.IGP：		产生于AS内部，一般是聚合路由或者通过Network引入的
2.EGP：		是通过EGP协议引入的（很少，它是BGP前身）
3.Incomplete：	其它方式得到，一般是redistribute引入的路由

LOCAL PREFERENCE本地优先级：
公认可选，用于AS内IBGP选择离开本AS时的最佳路由（表明本AS出口的BGP路由器的优先级）仅在IBGP间交换而不传递给EBGP，会选择优先级大的路径走（BGP中默认没有负载均衡）

MED（MULTI_EXIT_DISC）
可选非传递，相当于IGP协议使用的度量值（当路由器去往另一AS有多个入口时用于判断流量进入另一AS的最优路径）仅在相邻两个AS间传递，收到此属性的AS一方不会将其通告给其他第三方AS（即非传递属性）选MED值最小的走（BGP中默认没有负载均衡）

Weight权重：
思科私有（其他厂商也有但名字不同），为从对等体接收的路由分配首选值从而影响选路（仅对自己生效）选则权重最大的走

BGP的路由优选过程：
↓先丢弃下一跳不可达路由
↓优选Weight值最大的路由
↓优选本LOCAL PREFERENCE最高的路由（本地优先级）
↓优选聚合路由（汇总的路由）
↓优选AS路径最短的路由（AS_PATH）
↓依次选择ORIGIN属性为IGP,EGP,Incomplete的路由
↓优选MED值最小的路由
↓依次选择从EBGP，联盟，IBGP学来的路由
↓优选下一跳度量值最低的路由
↓优选CLUSTER_LIST长度最短的路由
↓优选ORIGINATOR_ID最小的路由
↓优选Router_ID最小的路由器发布的路由
↓优选地址最小的对等体发布的路由

应用BGP负载分担时的选路：
BGP本身一定能够选出唯一一条到达目的网段的最优路由（通过配置可允许BGP进行负载分担），BGP的负载分担与IGP的负载分担有所不同：IGP通过度量值是否相同来决定是否负载分担而BGP虽并没有路由计算方法但有丰富的选路规则，可对路由进行选择后有条件的进行负载分担

BGP基本属性影响选路的应用：
1.给从对等体接收的路由分配首选值（Weight）以影响选路
2.修改本地优先级的值实现选择离开本AS时的最佳BGP路由器
3.修改MED值实现选择本BGP有多出口时进入另一AS的最佳路由
4.配置next-hop-local实现将自身地址作为下一跳

思科设备格式：
配置BGP的基本属性影响选路：
router)#neighbor 1.1.1.1 weight 400			//为从对等体接收的路由分配权重值
router)#bgp default local-preference 5000		//配置本地优先级的缺省值（去往EBGP的路由使用的优先级，值“越大越好”）
router)#default-metric 5000				//配置MED缺省值（从EBGP学来的路由使用的权重）
router)#neighbor 1.1.1.1 next-hop-self 			//向对等体发布路由时将自身地址作为下一跳（使BGP对等体认为最优“>”）

使用route-map修改本地优先级：
nfig)#access-list 10 permit 10.0.0.0 0.0.0.255		//挑出需修改的BGP路由
nfig)#route-map localpri permit 10
nfig-route-map)#match ip address 10			//匹配住ACL10的地址
nfig-route-map)#set local-preference 300		//修改本地优先级为300
nfig)#route-map localpri permit 20			//没有MAtch语句则放行其他不匹配的流量
nfig-router)#neighbor 1.1.1.1 route-map localpri out	//应用Route-map策略于本地BGP对其IBGP邻居1.1.1.1发送的信息之中（仅对其邻居生效）

使用route-map修改MED值：
nfig)#access-list 10 permit 20.0.0.0 0.0.0.255		//挑出需要修改的BGP路由
nfig)#route-map medset permit 10
nfig-route-map)#match ip address 10			//匹配住ACL10的地址
nfig-route-map)#set metric 300				//修改MED值为300（缺省MED值为0,MED优先走大值，调大可避开此链路）
nfig)#route-map medset permit 20			//没有MAtch语句则放行其他不匹配的流量
nfig-router)#neighbor 2.2.2.2 route-map medset out	//应用Route-map的策略于本地BGP对其EBGP对等体邻居2.2.2.2发送的信息之中
-----------------------------------
BGP增强配置：
作为应用于AS间的路由协议BGP经常被应用于大规模网络中而这些大规模网络中存在BGP对等体众多、路由表庞大等问题，因此通过BGP增强配置解决在大规模网络中遇到的BGP对等体众多、BGP路由表庞大、IBGP全连接及路由表震荡等等问题
大规模BGP的问题：
1.因对等体众多配置繁琐导致维护管理难度大
2.因路由表庞大对设备性能提出挑战
3.因IBGP全连接导致应用和管理难度增加（全连接是为了避免水平分割）
4.因路由变化频繁导致路由更新频繁

上述问题解决办法：
1.BGP对等体众多：	对等体组（Peer Group）BGP团体（Community ）
2.BGP路由表庞大：	BGP路由聚合
3.IBGP全连接：		BGP路由反射（Route Reflection），BGP联盟（Confederation）
4.路由变化频繁：		BGP路由衰减（Route Dampening）

对等体组：
是一些具有某些相同属性的对等体集合，通过对等体组可简化配置（通过集合进行统一配置）根据对等体所在AS，对等体组可分为IBGP组和EBGP组
思科设备格式：
router)#neighbor 组名 peer-group		//创建对等体组
router)#neighbor 地址 peer-group 组名	//将此对等体邻居添加到对等体组（完成后对所有对等体邻居的配置可在对等体组中进行）
router)#neighbor 组名 remote-as 300	//对对等体组进行修改其邻居所在AS号的例子

BGP路由聚合：
配置路由聚合（即路由汇总）可减小对等体路由表中的路由数量，BGP支持自动/手动聚合两种方式（默认自动聚合开启）
1.自动聚合：	BGP发言者将不再发布子网路由，而是发布自然网段的路由（关闭BGP自动聚合：router)#No auto-summary）
		自动聚合只能对引入的IGP子网进行聚合而不能对从邻居学来的路由和通过BGP自身network发布的路由聚合
2.手动聚合：	使管理者采取灵活方式路进行由聚合发布策略（思科称为称原子聚合）
		可对已存在于BGP路由表的从邻居学来的具体路由、引入的IGP路由、通过Network生成的具体路由进行聚合（推荐）
		思科设备格式：router)#aggregate-address 网段 掩码 summary-only
		命令含义：在BGP中创建一个汇总条目，summary-only关键字使其不通告明细路由（仅汇总）

BGP反射：
为使IBGP能学到自己的路由信息需各个IBGP相互间建立逻辑上的邻居关系但因BGP水平分割的原因造成连接复杂，此时可借助BGP反射，类似于OSPF在MA网络中选举DR&BDR的思想，选出负责人（即BGP反射），将特定设备设为路由反射器后，其从内部学到的BGP路由信息将打破水平分割原则继续告知其他IBGP邻居（路由反射可替代IBGP对等体全连接，即允许某些设备将从IBGP处接收的路由发布给其他特定IBGP）
BGP反射补充：
1.若路由更新是从非客户机收到的则反射给客户机（客户机指的是加入路由反射器功能中的路由器，非客户机不能接收）
2.若路由更新是从客户机收到的则反射给所有非客户机和及客户机（除了这个路由更新的始发者）
3.若路由更新是从EBGP收到则反射给所有的客户机和非客户机
思科设备格式：
router)#neighbor 地址 router-reflector-client	//将指定的IBGP或组设为自己的客户端（自己将变成反射器）

BGP联盟：
联盟（Confederation）是另外一种替代IBGP对等体全连接的方法（不常用，仅了解即可，因其配置复杂且难判断）联盟将一个自治系统划分为若干个子自治系统，每个子自治系统内部的IBGP对等体建立全连接关系，子自治系统间建立联盟内部EBGP连接关系 （联盟里两两一组，每个组内的BGP告知其IBGP邻居之后，其IBGP邻居不用在告知其他BGP）

BGP注：
1.BGP在建立TCP连接后第一次完整更新，从此以后仅增量，触发更新
2.BGP路由器交换的是有关前往目标网络的路径的信息！
3.BGP路由器不接受路径列表（AS_PATH）中包含自身AS的更新，其被称为EBGP的水平分割原则
4.只将其使用的路由通告给邻居
5.Router-ID选举和OSPF一样
6.Open消息是TCP连接建立后发送的第一个消息（用于建立对等体间连接关系）
7.BGP用Open报文建邻居，用KeepaLive报文做日常维护
8.BGP目前使用的是第四个版本

思科设备中其他BGP命令：
router)#network 4.4.4.0 mask 255.255.255.0　	//宣告网段时严格按照IP地址掩码通告
R#show ip bgp summary 				//摘要的邻居邻居信息
R#show ip bgp 2.2.2.0/24			//显示明细路由的详细信息
R#show tcp brief    				//查看是谁发起的TCP链接
R#show ip bgp neighbors 			//详细的邻居信息
R#show ip bgp rib-failure    			//可看到提示有更高AD的路由
R#show ip bgp neighbors 2.2.2.2 advertised-routes 	//查看向此邻居发送了哪些路由信息
R#show ip bgp neighbors 3.3.3.3 received-routes 	//查看本路由器从此邻居接收了哪些路由信息
-----------------------------------------------------------------------------------------
隧道协议SSL（安全套阶层）是广泛应用于浏览器与服务器间身份认证和加密数据传输的安全协议，其使用对称加密对传输数据加密，使用非对称加密进行身份认证和交换对称加密的密钥

SSL报文格式：
1.SSL握手协议：	建立在SSL记录协议之上，用于在实际的数据传输前通信双方进行身份认证，协商加密算法，交换密钥等...
2.SSL修改密文规约协议
3.SSL告警协议
4.HTTP
5.SSL记录协议：	建立在TCP之上，为高层协议提供数据的封装/压缩/加密等基本功能
6.TCP
7.IP